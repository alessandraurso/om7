(in-package :om)(if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 542 281 112 1) (list 60 896 281 82 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -52 218 64 1) (list 60 312 167 55 1) (list 62 510 250 87 1) (list 57 875 187 65 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -42 355 81 1) (list 57 292 104 54 1) (list 62 573 271 86 1) (list 60 948 250 62 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 83 62 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 448 125 84 1) (list 60 657 271 84 1) (list 62 959 198 82 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 52 271 100 1) (list 62 417 187 63 1) (list 63 657 312 80 1) (list 65 1011 177 88 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 10 88 1) (list 66 62 365 101 1) (list 68 427 73 63 1) (list 69 635 292 111 1) (list 66 1031 146 88 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 104 240 93 1) (list 63 437 209 89 1) (list 60 719 260 55 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 114 334 90 1) (list 61 177 125 32 1) (list 62 448 156 77 1) (list 60 667 281 70 1) (list 57 1031 156 44 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -57 0 32 44 1) (list 62 52 417 76 1) (list 57 407 166 56 1) (list 60 625 334 82 1) (list 62 980 197 66 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 21 66 1) (list 60 53 1145 58 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 1136 58 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -41 364 100 1) (list 60 323 250 76 1) (list 57 542 375 49 1) (list 55 948 136 59 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 63 406 58 1) (list 55 480 135 27 1) (list 60 615 354 83 1) (list 57 969 219 78 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -57 0 94 78 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 937 167 95 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 21 281 103 1) (list 69 354 94 97 1) (list 74 573 229 119 1) (list 68 917 218 107 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 10 229 69 1) (list 69 83 114 36 1) (list 66 291 261 110 1) (list 65 614 292 65 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 10 292 106 1) (list 69 354 167 83 1) (list 66 636 333 54 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 635 302 117 1) (list 62 1020 178 94 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 10 94 1) (list 60 52 312 69 1) (list 57 468 94 58 1) (list 62 687 271 82 1) (list 57 1031 93 52 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 146 302 75 1) (list 57 490 125 58 1) (list 59 698 292 104 1) (list 62 1063 124 58 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 167 58 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 54 500 282 76 1) (list 56 730 166 66 1) (list 57 886 229 74 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 59 -84 219 100 1) (list 60 73 198 96 1) (list 62 260 240 90 1) (list 63 458 177 93 1) (list 60 594 229 84 1) (list 62 802 219 98 1) (list 63 979 208 98 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 11 98 1) (list 65 0 250 93 1) (list 66 188 260 99 1) (list 68 375 230 104 1) (list 69 542 219 96 1) (list 71 750 240 108 1) (list 72 907 208 89 1) (list 74 1063 114 101 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 209 101 1) (list 75 115 1083 109 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -75 0 1198 109 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -75 0 896 109 1) (list 74 886 270 85 1) (list 72 1032 156 97 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -72 0 73 97 1) (list 71 -21 239 108 1) (list 74 312 282 118 1) (list 72 562 282 100 1) (list 69 937 73 76 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 -21 292 96 1) (list 66 313 229 99 1) (list 65 573 292 84 1) (list 63 907 218 102 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 0 292 79 1) (list 60 386 94 49 1) (list 68 625 417 75 1) (list 60 1073 115 36 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -52 94 15 1) (list 69 32 385 91 1) (list 74 542 364 111 1) (list 69 948 94 84 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 490 198 100 1) (list 69 583 271 85 1) (list 68 823 281 94 1) (list 66 1031 157 113 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 52 113 1) (list 65 31 344 92 1) (list 63 385 198 109 1) (list 62 635 302 89 1) (list 60 958 125 70 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 31 177 96 1) (list 63 177 261 71 1) (list 62 386 208 50 1) (list 60 604 156 74 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 417 104 44 1) (list 62 584 323 107 1) (list 60 928 239 106 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 42 125 41 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 407 177 74 1) (list 60 688 333 99 1) (list 62 969 94 84 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 32 218 105 1) (list 65 334 208 96 1) (list 67 594 302 109 1) (list 69 969 219 117 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 10 117 1) (list 71 41 240 87 1) (list 72 364 219 93 1) (list 74 604 240 108 1) (list 75 948 198 124 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 21 219 103 1) (list 78 344 323 118 1) (list 80 615 229 102 1) (list 81 927 261 121 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -81 0 21 121 1) (list 78 -11 177 99 1) (list 81 166 219 83 1) (list 78 406 198 66 1) (list 77 593 250 97 1) (list 75 906 229 108 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -21 323 71 1) (list 72 334 291 58 1) (list 71 552 282 91 1) (list 74 896 240 117 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 21 260 58 1) (list 69 333 208 84 1) (list 68 594 291 93 1) (list 66 927 260 100 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 11 260 80 1) (list 63 334 187 96 1) (list 62 573 313 78 1) (list 60 948 73 61 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 0 312 103 1) (list 68 604 396 105 1) (list 60 1000 73 58 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 11 250 107 1) (list 69 240 239 80 1) (list 67 427 219 77 1) (list 66 667 260 89 1) (list 67 1011 135 77 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 52 302 108 1) (list 69 437 250 102 1) (list 65 687 198 94 1) (list 66 1031 83 71 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 104 292 84 1) (list 60 448 177 53 1) (list 57 709 218 42 1) (list 62 1021 177 84 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 52 84 1) (list 60 52 511 61 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 1062 135 120 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -70 0 63 120 1) (list 71 105 239 94 1) (list 74 428 291 101 1) (list 67 698 219 64 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -73 94 52 1) (list 65 73 396 84 1) (list 62 521 125 36 1) (list 67 698 323 94 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 239 94 47 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 105 208 127 1) (list 66 469 208 77 1) (list 65 709 229 91 1) (list 63 1053 135 110 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 146 110 1) (list 61 104 292 84 1) (list 62 479 146 61 1) (list 67 677 208 90 1) (list 59 1031 156 71 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -59 0 21 71 1) (list 55 84 218 76 1) (list 62 469 229 83 1) (list 64 511 62 74 1) (list 61 688 302 76 1) (list 60 1042 136 87 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 20 87 1) (list 66 83 281 100 1) (list 70 479 73 72 1) (list 74 718 188 108 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 78 -94 125 84 1) (list 82 135 469 103 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 739 271 121 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 -52 250 87 1) (list 67 178 270 73 1) (list 62 563 115 74 1) (list 65 771 292 93 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -93 93 69 1) (list 68 125 250 108 1) (list 69 459 250 79 1) (list 68 698 188 67 1) (list 66 844 177 73 1) (list 65 1073 94 52 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -84 84 54 1) (list 63 52 208 100 1) (list 61 271 291 73 1) (list 60 583 209 20 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 55 1052 146 90 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -55 0 42 90 1) (list 57 52 157 78 1) (list 58 250 188 89 1) (list 59 438 166 58 1) (list 60 469 104 45 1) (list 61 615 198 98 1) (list 62 834 156 86 1) (list 64 1052 125 97 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 42 97 1) (list 65 42 208 105 1) (list 67 250 240 82 1) (list 68 469 219 111 1) (list 70 667 219 85 1) (list 71 844 281 97 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -73 177 98 1) (list 74 42 281 102 1) (list 76 260 282 98 1) (list 77 469 729 108 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -77 0 666 108 1) (list 76 531 135 77 1) (list 74 646 145 84 1) (list 73 708 260 106 1) (list 72 823 354 86 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 219 291 67 1) (list 69 229 94 78 1) (list 74 719 281 124 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -83 187 52 1) (list 66 146 177 60 1) (list 77 448 313 103 1) (list 72 698 219 86 1) (list 66 1052 94 69 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 135 365 96 1) (list 71 646 270 103 1) (list 74 1000 198 110 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 83 110 1) (list 67 229 187 25 1) (list 69 229 125 22 1) (list 65 468 230 69 1) (list 62 729 271 32 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 438 343 118 1) (list 69 969 219 127 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 10 127 1) (list 72 187 386 110 1) (list 70 625 375 80 1) (list 66 1052 135 55 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 521 55 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 469 271 121 1) (list 62 719 260 84 1) (list 59 1042 125 53 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 93 365 93 1) (list 59 448 198 67 1) (list 62 677 333 87 1) (list 67 1041 157 90 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -67 0 10 90 1) (list 69 83 229 106 1) (list 68 416 250 89 1) (list 67 687 250 84 1) (list 66 1010 177 113 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 52 113 1) (list 65 83 261 75 1) (list 63 385 303 101 1) (list 62 656 282 74 1) (list 60 1042 104 47 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 61 52 271 96 1) (list 62 395 167 81 1) (list 65 625 395 94 1) (list 62 1000 93 45 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 59 41 250 78 1) (list 55 333 240 64 1) (list 62 770 157 76 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96) for val in (list (list 70 66 64 1) (list 64 2) (list 64 3) (list 64 4) (list 64 5) (list 64 6) (list 64 7) (list 64 8) (list 64 9) (list 64 10) (list 64 11) (list 64 12) (list 64 13) (list 64 14) (list 64 15) (list 64 16) (list 64 17) (list 64 18) (list 64 19) (list 64 20) (list 64 21) (list 64 22) (list 64 23) (list 64 24) (list 64 25) (list 64 26) (list 64 27) (list 64 28) (list 64 29) (list 64 30) (list 64 31) (list 64 32) (list 64 33) (list 64 34) (list 64 35) (list 64 36) (list 64 37) (list 64 38) (list 64 39) (list 64 40) (list 64 41) (list 64 42) (list 64 43) (list 64 44) (list 64 45) (list 64 46) (list 64 47) (list 64 48) (list 64 49) (list 64 50) (list 64 51) (list 64 52) (list 64 53) (list 64 54) (list 64 55) (list 64 56) (list 64 57) (list 64 58) (list 64 59) (list 64 60) (list 64 61) (list 64 62) (list 64 63) (list 64) (list 70 66 65) (list 70 66) (list 68 67) (list 68) (list 69) (list 70) (list 96 72 71) (list 96 72) (list 73) (list 74) (list 75) (list 76) (list 77) (list 78) (list 79) (list 96 80) (list 81) (list 82) (list 83) (list 84) (list 85) (list 86) (list 87) (list 96 88) (list 89) (list 90) (list 91) (list 92) (list 93) (list 94) (list 95) (list 96) (list 97)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97) for val in (list -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 0 64 0 66 64 65 0 70 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 1 2) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 -1) for val in (list 70 96 97 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 0 1 0 1 1 2 0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 1 2 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 97 :lrsmode (quote t) :comparateur (quote compareevents) :name (make-array 10 :initial-contents (eval-my-list (quote (#\i #\m #\p #\r #\o #\v #\i #\z #\e #\r)))) :context nil :continuity 5 :max-continuity 4 :start-region (list 0 97) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :beats/measure 4 :reftempo 1190 :currenttranspo 0 :tabou-mode nil :tabou (let ((hashtable (make-hash-table))) (loop for key in (list 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95) for val in (list (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t)) do (sethash hashtable key val)) hashtable) :feature nil  ))
