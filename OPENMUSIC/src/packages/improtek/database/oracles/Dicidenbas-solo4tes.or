(in-package :om)(if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 50 150 120 75 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 55 -42 58 78 1) (list 60 73 37 82 1) (list 62 172 110 105 1) (list 67 286 104 108 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 31 37 94 1) (list 74 120 124 9 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -78 94 108 1) (list 84 42 120 127 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 83 -16 120 121 1) (list 80 156 130 117 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -58 104 94 1) (list 77 98 126 101 1) (list 79 224 104 97 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -79 0 42 97 1) (list 74 10 120 94 1) (list 71 151 104 95 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 -63 130 105 1) (list 75 67 110 102 1) (list 73 208 115 84 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -26 58 89 1) (list 79 68 136 115 1) (list 72 193 89 100 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -20 94 87 1) (list 67 94 100 76 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -98 130 72 1) (list 62 11 119 78 1) (list 60 136 57 69 1) (list 67 256 109 103 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -67 0 5 103 1) (list 62 15 162 86 1) (list 63 183 124 55 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -31 344 39 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 213 99 88 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -10 88 99 1) (list 70 99 99 106 1) (list 67 204 140 108 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -21 140 110 1) (list 77 93 110 83 1) (list 76 99 46 102 1) (list 79 213 130 114 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -79 0 48 114 1) (list 74 -10 110 103 1) (list 77 115 157 118 1) (list 75 230 109 113 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -75 0 21 113 1) (list 74 11 98 89 1) (list 72 115 114 77 1) (list 71 250 41 71 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -26 146 117 1) (list 72 100 104 94 1) (list 67 224 94 75 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -4 150 95 1) (list 62 126 130 79 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -84 104 83 1) (list 65 46 115 107 1) (list 67 150 126 87 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -93 78 53 1) (list 65 16 120 101 1) (list 63 136 192 84 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 355 84 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 115 84 1) (list 62 177 104 108 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 61 -88 203 120 1) (list 61 156 182 127 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 11 127 1) (list 61 48 198 111 1) (list 62 246 120 103 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 41 103 1) (list 63 88 292 74 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 15 74 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 182 146 79 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 5 115 84 1) (list 70 150 142 122 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 0 109 109 1) (list 77 177 136 77 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 82 16 166 125 1) (list 86 198 172 126 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -86 0 5 126 1) (list 81 57 198 78 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 84 -36 234 119 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -99 135 79 1) (list 82 145 152 124 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 83 -88 104 89 1) (list 82 58 150 117 1) (list 79 224 110 102 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 68 89 127 1) (list 74 230 140 100 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 16 100 1) (list 72 26 58 73 1) (list 77 141 146 114 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -47 125 109 1) (list 74 99 84 85 1) (list 77 209 104 113 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -27 120 97 1) (list 67 104 73 65 1) (list 69 115 46 67 1) (list 74 229 104 117 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 84 117 1) (list 75 21 141 109 1) (list 72 162 98 84 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -83 94 92 1) (list 72 11 78 82 1) (list 67 125 88 88 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -73 68 90 1) (list 62 47 307 87 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 266 87 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 61 202 120 100 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -31 104 93 1) (list 65 78 99 88 1) (list 67 177 109 121 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 -15 94 113 1) (list 70 105 104 103 1) (list 71 209 130 100 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 73 -36 120 118 1) (list 75 94 104 105 1) (list 77 209 119 91 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -6 110 114 1) (list 80 98 100 111 1) (list 82 229 99 107 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 83 -11 109 105 1) (list 85 124 126 118 1) (list 87 254 116 115 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -87 0 317 115 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -87 0 209 115 1) (list 86 224 130 105 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 87 -37 142 112 1) (list 86 141 182 98 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -86 0 36 98 1) (list 84 42 130 88 1) (list 82 240 120 83 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -82 0 46 83 1) (list 79 120 218 63 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 73 208 68 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 76 240 98 109 1)) :duration 350 :data nil :harmlabel (list (quote c) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 78 46 168 127 1) (list 84 234 110 127 1)) :duration 350 :data nil :harmlabel (list (quote c) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -84 0 78 127 1) (list 78 62 229 110 1) (list 76 254 100 85 1)) :duration 350 :data nil :harmlabel (list (quote c) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 42 161 121 1) (list 80 198 104 102 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -31 89 75 1) (list 78 32 114 95 1) (list 77 115 119 102 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -99 130 114 1) (list 74 68 114 84 1) (list 77 214 109 111 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -77 0 15 111 1) (list 68 63 192 80 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote bb) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 203 115 124 1) (list 79 229 31 81 1)) :duration 350 :data nil :harmlabel (list (quote bb) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -36 52 63 1) (list 74 42 89 102 1) (list 77 131 104 104 1) (list 75 214 125 96 1) (list 74 220 62 36 1)) :duration 350 :data nil :harmlabel (list (quote bb) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -75 0 16 96 1) (list 74 0 52 76 1) (list 72 73 62 86 1) (list 70 157 109 99 1)) :duration 350 :data nil :harmlabel (list (quote bb) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 -94 110 83 1) (list 67 6 88 80 1) (list 65 110 88 77 1) (list 63 198 110 88 1)) :duration 350 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -68 114 90 1) (list 60 30 94 79 1) (list 65 120 114 91 1) (list 67 218 110 86 1)) :duration 350 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -67 0 20 86 1) (list 62 -37 115 100 1) (list 65 68 104 94 1) (list 63 166 47 93 1) (list 62 244 74 72 1)) :duration 350 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -15 109 91 1) (list 58 84 99 103 1) (list 56 188 99 87 1)) :duration 350 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 55 -67 270 93 1)) :duration 350 :data nil :harmlabel (list (quote g\#) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g\#) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g\#) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g\#) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 56 188 119 120 1)) :duration 350 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -32 136 91 1) (list 61 88 99 102 1) (list 64 208 68 108 1)) :duration 350 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -26 110 111 1) (list 71 -5 37 83 1) (list 73 62 105 118 1) (list 76 188 120 105 1)) :duration 350 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 81 -62 124 127 1) (list 69 42 99 118 1) (list 81 152 93 95 1) (list 79 188 52 41 1) (list 69 240 104 83 1)) :duration 350 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 81 -10 115 92 1) (list 69 68 78 83 1) (list 80 203 130 111 1) (list 68 209 124 117 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -80 0 48 111 1) (list -68 0 37 117 1) (list 67 120 136 76 1) (list 79 130 194 43 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 26 203 93 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -94 204 113 1) (list 74 183 151 97 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 20 97 1) (list 75 72 224 82 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 -21 276 66 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -89 109 114 1) (list 62 36 99 111 1) (list 63 150 131 119 1)) :duration 350 :data nil :harmlabel (list (quote c) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 64 -99 115 95 1) (list 65 -68 52 44 1) (list 66 16 146 117 1) (list 68 136 120 110 1)) :duration 350 :data nil :harmlabel (list (quote c) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -84 94 106 1) (list 72 30 120 105 1) (list 74 67 53 47 1) (list 74 150 104 113 1) (list 75 265 105 118 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 10 146 110 1) (list 79 130 120 115 1) (list 80 228 110 114 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -80 0 5 114 1) (list 82 16 88 113 1) (list 84 125 156 102 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 86 -94 100 126 1) (list 87 11 99 117 1) (list 89 146 94 110 1)) :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 90 -94 433 127 1)) :duration 350 :data nil :harmlabel (list (quote bb) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -90 0 348 127 1)) :duration 350 :data nil :harmlabel (list (quote bb) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -90 0 209 127 1) (list 91 240 125 125 1) (list 89 240 125 120 1)) :duration 350 :data nil :harmlabel (list (quote bb) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -91 0 26 125 1) (list -89 0 41 120 1) (list 87 130 151 127 1)) :duration 350 :data nil :harmlabel (list (quote bb) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 86 -10 125 127 1) (list 89 120 136 114 1)) :duration 350 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 82 -88 114 101 1) (list 86 16 124 90 1) (list 79 146 78 84 1)) :duration 350 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 82 -88 250 108 1)) :duration 350 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 182 84 76 1) (list 81 188 36 98 1)) :duration 350 :data nil :harmlabel (list (quote g\#) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -72 119 115 1) (list 72 0 156 69 1) (list 74 193 157 127 1)) :duration 350 :data nil :harmlabel (list (quote g\#) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 30 152 125 1) (list 77 197 141 113 1) (list 76 239 52 52 1)) :duration 350 :data nil :harmlabel (list (quote g\#) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 31 198 126 1) (list 74 219 109 106 1)) :duration 350 :data nil :harmlabel (list (quote g\#) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 84 42 171 127 1) (list 81 218 78 111 1)) :duration 350 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 80 -57 124 100 1) (list 82 -41 67 31 1) (list 78 5 198 115 1)) :duration 350 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 -100 131 110 1) (list 75 62 140 113 1) (list 74 218 120 107 1)) :duration 350 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -11 119 106 1) (list 73 114 88 113 1) (list 81 228 115 114 1)) :duration 350 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -81 0 47 114 1) (list 69 5 141 104 1) (list 73 131 119 108 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 76 -84 63 105 1) (list 81 31 135 126 1) (list 85 135 130 117 1) (list 88 239 115 100 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 93 -37 130 117 1) (list 81 57 110 113 1) (list 93 167 109 109 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 81 -94 114 84 1) (list 93 15 125 96 1) (list 81 88 120 98 1)) :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 92 -84 162 111 1) (list 80 -68 150 115 1) (list 91 67 115 96 1) (list 79 78 119 69 1) (list 81 104 41 58 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 -88 110 99 1) (list 89 -82 98 85 1) (list 87 146 130 108 1) (list 75 146 146 110 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 84 42 94 82 1) (list 72 42 114 69 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 82 -78 104 99 1) (list 70 -73 119 93 1) (list 66 151 119 94 1) (list 78 156 104 93 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -78 124 47 1) (list 63 198 130 64 1) (list 75 213 115 27 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 72 64 1) (list -75 0 16 27 1)) :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 350 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157) for val in (list (list 81 77 73 69 61 9 5 1) (list 69 5 2) (list 69 5 3) (list 69 5 4) (list 69 5) (list 9 6) (list 9 7) (list 9 8) (list 9) (list 61 17 10) (list 61 17 11) (list 61 17 12) (list 61 17 13) (list 17 14) (list 17 15) (list 17 16) (list 17) (list 18) (list 19) (list 20) (list 21) (list 22) (list 23) (list 24) (list 25) (list 26) (list 27) (list 28) (list 61 29) (list 30) (list 31) (list 32) (list 33) (list 34) (list 35) (list 36) (list 37) (list 38) (list 39) (list 40) (list 41) (list 42) (list 43) (list 44) (list 61 45) (list 46) (list 47) (list 48) (list 49) (list 50) (list 51) (list 52) (list 53) (list 54) (list 55) (list 56) (list 57) (list 58) (list 59) (list 60) (list 61) (list 65 62) (list 65 63) (list 65 64) (list 65) (list 66) (list 67) (list 68) (list 69) (list 73 70) (list 73 71) (list 73 72) (list 73) (list 77 74) (list 77 75) (list 77 76) (list 77) (list 81 78) (list 81 79) (list 81 80) (list 81) (list 85 82) (list 85 83) (list 85 84) (list 85) (list 86) (list 87) (list 88) (list 89) (list 90) (list 91) (list 92) (list 125 93) (list 94) (list 95) (list 96) (list 97) (list 98) (list 99) (list 100) (list 101) (list 102) (list 103) (list 104) (list 105) (list 106) (list 107) (list 108) (list 109) (list 110) (list 111) (list 112) (list 113) (list 114) (list 115) (list 116) (list 117) (list 118) (list 119) (list 120) (list 121) (list 122) (list 123) (list 124) (list 125) (list 126) (list 127) (list 128) (list 129) (list 130) (list 131) (list 132) (list 133) (list 134) (list 135) (list 136) (list 137) (list 138) (list 139) (list 140) (list 141) (list 142) (list 143) (list 144) (list 145) (list 146) (list 147) (list 148) (list 149) (list 150) (list 151) (list 152) (list 153) (list 154) (list 155) (list 156) (list 157) (list 158)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158) for val in (list -1 0 1 2 3 0 5 6 7 0 9 10 11 12 13 14 15 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 0 61 62 63 1 2 3 4 0 69 70 71 0 73 74 75 0 77 78 79 0 81 82 83 5 6 7 8 9 10 11 12 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 -1) for val in (list 81 65 66 67 68 85 86 87 88 89 90 91 92 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 1 2 3 0 1 2 3 0 1 2 3 4 5 6 7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 0 1 2 3 1 2 3 4 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 158 :lrsmode (quote t) :comparateur (quote compareevents) :name (make-array 10 :initial-contents (eval-my-list (quote (#\i #\m #\p #\r #\o #\v #\i #\z #\e #\r)))) :context nil :continuity 127 :max-continuity 1000 :start-region (list 0 158) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 350 :currenttranspo 0 :tabou-mode nil :tabou (let ((hashtable (make-hash-table))) (loop for key in (list 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128) for val in (list (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t)) do (sethash hashtable key val)) hashtable) :feature nil ))