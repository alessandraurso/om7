(in-package :om)(if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 563 302 122 1) (list 66 938 198 97 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -21 354 91 1) (list 68 323 83 86 1) (list 69 562 282 107 1) (list 66 917 177 89 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 0 282 74 1) (list 63 355 208 77 1) (list 62 594 229 61 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 0 427 78 1) (list 57 386 94 17 1) (list 62 604 292 77 1) (list 60 990 198 58 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 52 58 1) (list 57 21 271 72 1) (list 60 458 104 67 1) (list 62 646 364 44 1) (list 57 1052 83 48 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 52 365 67 1) (list 62 469 104 69 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 406 187 82 1) (list 65 614 94 57 1) (list 69 750 73 89 1) (list 72 1000 146 80 1) (list 74 1010 73 99 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 0 219 104 1) (list 81 167 187 100 1) (list 84 344 271 113 1) (list 81 573 229 79 1) (list 77 771 198 86 1) (list 72 1021 73 63 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 21 197 101 1) (list 65 218 261 95 1) (list 60 427 177 87 1) (list 72 656 292 112 1) (list 69 833 354 106 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 73 106 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 573 292 104 1) (list 60 927 261 77 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 21 77 1) (list 57 -11 282 66 1) (list 60 364 94 73 1) (list 65 573 250 87 1) (list 57 1031 156 82 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -57 0 31 82 1) (list 60 115 312 76 1) (list 62 625 365 100 1) (list 60 1011 187 96 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 94 96 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 605 239 121 1) (list 66 969 188 87 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 11 260 84 1) (list 68 323 219 112 1) (list 69 563 260 107 1) (list 74 886 198 106 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -20 302 79 1) (list 65 323 105 61 1) (list 63 563 250 91 1) (list 60 969 115 35 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -52 271 104 1) (list 63 208 313 79 1) (list 62 396 250 61 1) (list 57 594 260 80 1) (list 60 990 197 100 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 53 100 1) (list 62 42 302 67 1) (list 60 355 208 92 1) (list 57 532 104 69 1) (list 59 709 354 90 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 427 188 96 1) (list 62 698 219 79 1) (list 63 1010 188 90 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 52 250 88 1) (list 66 354 271 103 1) (list 68 614 282 89 1) (list 69 937 219 93 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 -10 270 103 1) (list 72 312 198 109 1) (list 74 552 292 112 1) (list 75 864 261 97 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 10 313 50 1) (list 72 31 104 40 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 354 261 121 1) (list 72 604 271 107 1) (list 69 990 94 48 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 80 31 417 88 1) (list 72 448 104 40 1) (list 81 614 334 114 1) (list 72 1052 125 27 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 86 42 1156 122 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 84 31 219 101 1) (list 86 198 240 50 1) (list 84 365 312 65 1) (list 83 604 250 107 1) (list 84 990 198 114 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -84 0 52 114 1) (list 83 41 198 92 1) (list 84 218 219 69 1) (list 83 385 302 67 1) (list 81 614 219 115 1) (list 83 979 198 113 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 81 21 187 84 1) (list 83 208 250 47 1) (list 81 385 219 74 1) (list 80 625 229 108 1) (list 81 938 239 119 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -81 0 11 119 1) (list 80 11 208 84 1) (list 81 208 219 57 1) (list 80 375 281 71 1) (list 78 594 208 98 1) (list 80 906 282 108 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 78 -21 187 84 1) (list 80 156 208 69 1) (list 78 323 323 63 1) (list 77 562 261 94 1) (list 78 916 240 103 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 0 188 74 1) (list 78 167 83 46 1) (list 77 333 198 69 1) (list 75 573 271 96 1) (list 74 948 208 106 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -52 281 82 1) (list 74 156 281 74 1) (list 72 406 104 81 1) (list 74 645 219 102 1) (list 75 833 177 67 1) (list 74 1031 156 64 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 250 64 1) (list 72 73 177 84 1) (list 74 386 229 102 1) (list 75 584 302 93 1) (list 74 813 271 62 1) (list 72 1073 115 81 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 104 250 94 1) (list 69 406 114 69 1) (list 68 677 260 93 1) (list 66 989 188 101 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 52 101 1) (list 65 104 229 75 1) (list 63 396 229 86 1) (list 62 646 375 69 1) (list 60 1041 84 56 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 94 375 90 1) (list 57 417 94 56 1) (list 62 667 323 101 1) (list 60 1032 156 84 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 62 84 1) (list 57 52 271 67 1) (list 60 468 240 52 1) (list 62 646 354 85 1) (list 57 1073 93 49 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 0 396 59 1) (list 57 365 125 49 1) (list 62 594 344 95 1) (list 60 969 219 99 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 73 99 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 604 354 100 1) (list 65 604 198 103 1) (list 66 802 208 69 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 20 344 109 1) (list 68 364 115 80 1) (list 69 593 292 105 1) (list 72 958 229 104 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -72 0 354 104 1) (list 65 0 198 97 1) (list 66 208 219 72 1) (list 65 636 354 100 1) (list 72 656 261 86 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 62 292 71 1) (list 62 93 355 59 1) (list 60 666 354 103 1) (list 62 1062 125 57 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 177 57 1) (list 72 479 396 97 1) (list 65 490 281 94 1) (list 66 771 114 57 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 407 219 113 1) (list 60 626 260 93 1) (list 57 969 84 65 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 53 0 271 105 1) (list 60 62 376 60 1) (list 54 292 208 70 1) (list 53 594 385 91 1) (list 60 594 125 65 1) (list 50 1000 188 77 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -50 0 208 77 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 406 177 98 1) (list 62 635 240 94 1) (list 63 990 166 107 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 10 261 92 1) (list 66 365 156 84 1) (list 68 594 260 94 1) (list 69 958 84 80 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 0 219 120 1) (list 66 375 198 98 1) (list 65 604 271 89 1) (list 63 948 208 105 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 10 313 74 1) (list 60 323 167 95 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 53 197 110 1) (list 60 948 167 110 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 354 188 79 1) (list 60 594 260 97 1) (list 62 948 177 97 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 41 271 118 1) (list 62 437 230 80 1) (list 60 656 198 90 1) (list 58 1031 156 84 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -58 0 52 84 1) (list 59 52 292 80 1) (list 61 438 239 88 1) (list 62 657 333 81 1) (list 64 1032 156 110 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 104 110 1) (list 65 94 218 98 1) (list 67 416 219 98 1) (list 68 677 219 107 1) (list 70 969 218 106 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 52 344 107 1) (list 72 417 219 112 1) (list 66 688 323 72 1) (list 65 1063 94 48 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 52 344 99 1) (list 60 417 187 63 1) (list 61 687 282 87 1) (list 62 1021 177 79 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 73 396 106 1) (list 59 448 177 72 1) (list 55 677 416 69 1) (list 53 677 323 99 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 156 386 74 1) (list 60 167 271 90 1) (list 61 688 406 86 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -52 208 99 1) (list 58 500 239 104 1) (list 56 708 260 95 1) (list 54 948 166 66 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 56 -73 230 81 1) (list 58 157 197 91 1) (list 60 354 219 98 1) (list 61 573 219 102 1) (list 63 771 188 96 1) (list 65 927 240 91 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -10 240 106 1) (list 69 167 187 104 1) (list 71 365 833 112 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -71 0 1198 112 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -71 0 458 112 1) (list 70 417 291 101 1) (list 69 563 218 68 1) (list 67 688 448 103 1) (list 66 1073 115 107 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 62 107 1) (list 68 156 281 96 1) (list 70 510 188 104 1) (list 71 739 292 90 1) (list 73 1073 114 109 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -73 0 83 109 1) (list 74 104 250 104 1) (list 76 406 219 103 1) (list 77 677 511 118 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -77 0 583 118 1) (list 76 448 208 91 1) (list 74 541 188 95 1) (list 73 656 417 109 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 77 521 240 108 1) (list 75 677 219 86 1) (list 73 844 208 76 1) (list 70 1011 177 86 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -70 0 104 86 1) (list 66 20 219 112 1) (list 65 239 344 59 1) (list 63 573 270 102 1) (list 61 823 239 70 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -52 240 84 1) (list 65 136 281 107 1) (list 59 490 104 89 1) (list 55 729 313 85 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 125 323 102 1) (list 55 500 156 53 1) (list 59 719 281 96 1) (list 62 1063 125 102 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 52 102 1) (list 65 104 333 101 1) (list 60 489 354 70 1) (list 66 583 83 56 1) (list 54 739 250 98 1) (list 63 1083 104 94 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 198 94 1) (list 54 188 281 72 1) (list 55 469 260 85 1) (list 56 750 260 97 1) (list 58 1083 105 88 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -58 0 114 88 1) (list 59 177 218 74 1) (list 61 479 271 102 1) (list 62 750 239 85 1) (list 64 1072 115 100 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 83 100 1) (list 65 135 230 95 1) (list 67 458 209 82 1) (list 68 708 209 99 1) (list 70 990 198 101 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -70 0 31 101 1) (list 71 62 354 108 1) (list 72 416 209 115 1) (list 66 708 333 72 1) (list 65 1041 146 63 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 10 63 1) (list 63 73 365 97 1) (list 62 479 125 34 1) (list 60 510 94 36 1) (list 61 677 229 102 1) (list 62 948 240 83 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 31 83 1) (list 65 114 281 106 1) (list 59 510 135 44 1) (list 55 760 125 22 1) (list 57 802 104 35 1) (list 62 1072 115 111 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 125 111 1) (list 55 490 208 71 1) (list 53 531 146 33 1) (list 59 688 197 82 1) (list 62 865 198 87 1) (list 65 1073 115 113 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 208 113 1) (list 62 218 146 61 1) (list 60 458 250 83 1) (list 54 729 302 107 1) (list 53 1052 135 50 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -53 0 927 50 1) (list 51 1042 156 85 1)) :duration 1190 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -51 0 21 85 1) (list 50 52 208 91 1) (list 50 438 124 60 1) (list 51 677 281 97 1) (list 51 1062 126 95 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -51 0 135 95 1) (list 52 93 261 88 1) (list 52 468 198 81 1) (list 53 677 281 110 1) (list 53 1072 115 114 1)) :duration 1190 :data nil :harmlabel (list (quote g) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -53 0 94 114 1) (list 54 125 250 105 1) (list 54 500 292 94 1) (list 55 729 229 102 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 55 -93 104 87 1) (list 56 126 260 103 1) (list 56 500 167 85 1) (list 57 719 271 109 1) (list 55 792 104 40 1)) :duration 1190 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -83 218 104 1)) :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 1190 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107) for val in (list (list 67 63 61 1) (list 61 2) (list 61 3) (list 61 4) (list 61 5) (list 61 6) (list 61 7) (list 61 8) (list 61 9) (list 61 10) (list 61 11) (list 61 12) (list 61 13) (list 61 14) (list 61 15) (list 61 16) (list 61 17) (list 61 18) (list 61 19) (list 61 20) (list 61 21) (list 61 22) (list 61 23) (list 61 24) (list 61 25) (list 61 26) (list 61 27) (list 61 28) (list 61 29) (list 61 30) (list 61 31) (list 61 32) (list 61 33) (list 61 34) (list 61 35) (list 61 36) (list 61 37) (list 61 38) (list 61 39) (list 61 40) (list 61 41) (list 61 42) (list 61 43) (list 61 44) (list 61 45) (list 61 46) (list 61 47) (list 61 48) (list 61 49) (list 61 50) (list 61 51) (list 61 52) (list 61 53) (list 61 54) (list 61 55) (list 61 56) (list 61 57) (list 61 58) (list 61 59) (list 61 60) (list 61) (list 67 63 62) (list 67 63) (list 65 64) (list 65) (list 66) (list 67) (list 93 69 68) (list 93 69) (list 70) (list 71) (list 72) (list 73) (list 74) (list 75) (list 76) (list 93 77) (list 78) (list 79) (list 80) (list 81) (list 82) (list 83) (list 84) (list 93 85) (list 86) (list 87) (list 88) (list 89) (list 90) (list 91) (list 92) (list 93) (list 94) (list 95) (list 96) (list 97) (list 98) (list 99) (list 100) (list 101) (list 102) (list 103) (list 104) (list 105) (list 106) (list 107) (list 108)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108) for val in (list -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 0 61 0 63 61 62 0 67 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 -1) for val in (list 67 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 0 1 0 1 1 2 0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 108 :lrsmode (quote t) :comparateur (quote compareevents) :name (make-array 10 :initial-contents (eval-my-list (quote (#\i #\m #\p #\r #\o #\v #\i #\z #\e #\r)))) :context nil :continuity 5 :max-continuity 4 :start-region (list 0 108) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :beats/measure 4 :reftempo 1190 :currenttranspo 0 :tabou-mode nil :tabou (let ((hashtable (make-hash-table))) (loop for key in (list 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 99 100 101 102 103 104) for val in (list (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t)) do (sethash hashtable key val)) hashtable) :feature nil))
