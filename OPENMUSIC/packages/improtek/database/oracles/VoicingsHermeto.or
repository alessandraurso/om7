(in-package :om)(if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 48 0 330 58 12) (list 58 0 330 58 12) (list 62 0 330 58 12) (list 63 0 330 58 12) (list 65 0 330 58 12) (list 12 0 10 100 15) (list 0 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -48 0 335 58 12) (list -58 0 335 58 12) (list -62 0 335 58 12) (list -63 0 335 58 12) (list -65 0 335 58 12) (list 12 0 11 100 15) (list 0 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -48 0 325 58 12) (list -58 0 325 58 12) (list -62 0 325 58 12) (list -63 0 325 58 12) (list -65 0 325 58 12) (list 12 0 11 100 15) (list 0 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -48 0 133 58 12) (list -58 0 133 58 12) (list -62 0 133 58 12) (list -63 0 133 58 12) (list -65 0 133 58 12) (list 12 0 10 100 15) (list 0 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 41 0 330 58 12) (list 57 0 330 58 12) (list 61 0 330 58 12) (list 63 0 330 58 12) (list 68 0 330 58 12) (list 12 0 11 100 15) (list 5 48 229 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -41 0 329 58 12) (list -57 0 329 58 12) (list -61 0 329 58 12) (list -63 0 329 58 12) (list -68 0 329 58 12) (list 12 0 10 100 15) (list 5 47 235 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -41 0 331 58 12) (list -57 0 331 58 12) (list -61 0 331 58 12) (list -63 0 331 58 12) (list -68 0 331 58 12) (list 12 0 11 100 15) (list 5 49 229 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -41 0 127 58 12) (list -57 0 127 58 12) (list -61 0 127 58 12) (list -63 0 127 58 12) (list -68 0 127 58 12) (list 12 0 5 100 15) (list 5 47 229 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 46 0 331 58 12) (list 57 0 331 58 12) (list 60 0 331 58 12) (list 62 0 331 58 12) (list 67 0 331 58 12) (list 12 0 11 100 15) (list 10 49 233 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 335 58 12) (list -57 0 335 58 12) (list -60 0 335 58 12) (list -62 0 335 58 12) (list -67 0 335 58 12) (list 12 0 10 100 15) (list 10 53 229 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 329 58 12) (list -57 0 329 58 12) (list -60 0 329 58 12) (list -62 0 329 58 12) (list -67 0 329 58 12) (list 12 0 10 100 15) (list 10 47 229 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 129 58 12) (list -57 0 129 58 12) (list -60 0 129 58 12) (list -62 0 129 58 12) (list -67 0 129 58 12) (list 12 0 11 100 15) (list 10 49 233 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 39 0 335 58 12) (list 55 0 335 58 12) (list 58 0 335 58 12) (list 62 0 335 58 12) (list 65 0 335 58 12) (list 12 0 10 100 15) (list 3 47 235 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -39 0 329 58 12) (list -55 0 329 58 12) (list -58 0 329 58 12) (list -62 0 329 58 12) (list -65 0 329 58 12) (list 12 0 10 100 15) (list 3 47 235 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -39 0 331 58 12) (list -55 0 331 58 12) (list -58 0 331 58 12) (list -62 0 331 58 12) (list -65 0 331 58 12) (list 12 0 11 100 15) (list 3 49 233 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -39 0 133 58 12) (list -55 0 133 58 12) (list -58 0 133 58 12) (list -62 0 133 58 12) (list -65 0 133 58 12) (list 12 0 10 100 15) (list 3 47 235 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 45 0 330 55 12) (list 55 0 330 55 12) (list 59 0 330 55 12) (list 60 0 330 55 12) (list 62 0 330 55 12) (list 12 0 10 100 15) (list 9 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 330 55 12) (list -55 0 330 55 12) (list -59 0 330 55 12) (list -60 0 330 55 12) (list -62 0 330 55 12) (list 12 0 11 100 15) (list 9 48 235 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 330 55 12) (list -55 0 330 55 12) (list -59 0 330 55 12) (list -60 0 330 55 12) (list -62 0 330 55 12) (list 12 0 10 100 15) (list 9 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 128 55 12) (list -55 0 128 55 12) (list -59 0 128 55 12) (list -60 0 128 55 12) (list -62 0 128 55 12) (list 12 0 5 100 15) (list 9 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 38 0 330 53 12) (list 54 0 330 53 12) (list 58 0 330 53 12) (list 60 0 330 53 12) (list 65 0 330 53 12) (list 12 0 5 100 15) (list 2 48 229 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 330 53 12) (list -54 0 330 53 12) (list -58 0 330 53 12) (list -60 0 330 53 12) (list -65 0 330 53 12) (list 12 0 5 100 15) (list 2 48 229 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 329 53 12) (list -54 0 329 53 12) (list -58 0 329 53 12) (list -60 0 329 53 12) (list -65 0 329 53 12) (list 12 0 10 100 15) (list 2 47 229 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 129 53 12) (list -54 0 129 53 12) (list -58 0 129 53 12) (list -60 0 129 53 12) (list -65 0 129 53 12) (list 12 0 11 100 15) (list 2 49 234 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 329 53 12) (list 53 0 329 53 12) (list 57 0 329 53 12) (list 58 0 329 53 12) (list 60 0 329 53 12) (list 12 0 10 100 15) (list 7 47 235 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 335 53 12) (list -53 0 335 53 12) (list -57 0 335 53 12) (list -58 0 335 53 12) (list -60 0 335 53 12) (list 12 0 11 100 15) (list 7 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 325 53 12) (list -53 0 325 53 12) (list -57 0 325 53 12) (list -58 0 325 53 12) (list -60 0 325 53 12) (list 12 0 11 100 15) (list 7 49 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 133 53 12) (list -53 0 133 53 12) (list -57 0 133 53 12) (list -58 0 133 53 12) (list -60 0 133 53 12) (list 12 0 11 100 15) (list 7 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 331 53 12) (list 58 0 331 53 12) (list 60 0 331 53 12) (list 65 0 331 53 12) (list 69 0 331 53 12) (list 12 0 11 100 15) (list 7 49 233 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 329 53 12) (list -58 0 329 53 12) (list -60 0 329 53 12) (list -65 0 329 53 12) (list -69 0 329 53 12) (list 12 0 10 100 15) (list 7 47 235 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 335 53 12) (list -58 0 335 53 12) (list -60 0 335 53 12) (list -65 0 335 53 12) (list -69 0 335 53 12) (list 12 0 11 100 15) (list 7 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 129 53 12) (list -58 0 129 53 12) (list -60 0 129 53 12) (list -65 0 129 53 12) (list -69 0 129 53 12) (list 12 0 11 100 15) (list 7 49 233 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 48 0 335 53 12) (list 58 0 335 53 12) (list 62 0 335 53 12) (list 63 0 335 53 12) (list 65 0 335 53 12) (list 12 0 10 100 15) (list 0 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -48 0 335 53 12) (list -58 0 335 53 12) (list -62 0 335 53 12) (list -63 0 335 53 12) (list -65 0 335 53 12) (list 12 0 10 100 15) (list 0 47 235 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -48 0 325 53 12) (list -58 0 325 53 12) (list -62 0 325 53 12) (list -63 0 325 53 12) (list -65 0 325 53 12) (list 12 0 5 100 15) (list 0 47 229 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -48 0 127 53 12) (list -58 0 127 53 12) (list -62 0 127 53 12) (list -63 0 127 53 12) (list -65 0 127 53 12) (list 12 0 10 100 15) (list 0 47 235 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 41 0 330 53 12) (list 57 0 330 53 12) (list 61 0 330 53 12) (list 63 0 330 53 12) (list 68 0 330 53 12) (list 12 0 10 100 15) (list 5 48 229 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -41 0 325 53 12) (list -57 0 325 53 12) (list -61 0 325 53 12) (list -63 0 325 53 12) (list -68 0 325 53 12) (list 12 0 11 100 15) (list 5 48 229 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -41 0 335 53 12) (list -57 0 335 53 12) (list -61 0 335 53 12) (list -63 0 335 53 12) (list -68 0 335 53 12) (list 12 0 11 100 15) (list 5 48 234 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -41 0 128 53 12) (list -57 0 128 53 12) (list -61 0 128 53 12) (list -63 0 128 53 12) (list -68 0 128 53 12) (list 12 0 11 100 15) (list 5 48 234 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 46 0 335 53 12) (list 57 0 335 53 12) (list 60 0 335 53 12) (list 62 0 335 53 12) (list 67 0 335 53 12) (list 12 0 10 100 15) (list 10 53 234 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 330 53 12) (list -57 0 330 53 12) (list -60 0 330 53 12) (list -62 0 330 53 12) (list -67 0 330 53 12) (list 12 0 10 100 15) (list 10 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 335 53 12) (list -57 0 335 53 12) (list -60 0 335 53 12) (list -62 0 335 53 12) (list -67 0 335 53 12) (list 12 0 11 100 15) (list 10 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 128 53 12) (list -57 0 128 53 12) (list -60 0 128 53 12) (list -62 0 128 53 12) (list -67 0 128 53 12) (list 12 0 11 100 15) (list 10 48 229 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 39 0 330 53 12) (list 55 0 330 53 12) (list 58 0 330 53 12) (list 62 0 330 53 12) (list 65 0 330 53 12) (list 12 0 5 100 15) (list 3 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -39 0 335 53 12) (list -55 0 335 53 12) (list -58 0 335 53 12) (list -62 0 335 53 12) (list -65 0 335 53 12) (list 12 0 11 100 15) (list 3 53 229 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -39 0 335 53 12) (list -55 0 335 53 12) (list -58 0 335 53 12) (list -62 0 335 53 12) (list -65 0 335 53 12) (list 12 0 11 100 15) (list 3 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -39 0 128 53 12) (list -55 0 128 53 12) (list -58 0 128 53 12) (list -62 0 128 53 12) (list -65 0 128 53 12) (list 12 0 11 100 15) (list 3 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 45 0 330 53 12) (list 55 0 330 53 12) (list 59 0 330 53 12) (list 60 0 330 53 12) (list 62 0 330 53 12) (list 12 0 10 100 15) (list 9 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 330 53 12) (list -55 0 330 53 12) (list -59 0 330 53 12) (list -60 0 330 53 12) (list -62 0 330 53 12) (list 12 0 11 100 15) (list 9 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 325 53 12) (list -55 0 325 53 12) (list -59 0 325 53 12) (list -60 0 325 53 12) (list -62 0 325 53 12) (list 12 0 10 100 15) (list 9 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 127 53 12) (list -55 0 127 53 12) (list -59 0 127 53 12) (list -60 0 127 53 12) (list -62 0 127 53 12) (list 12 0 10 100 15) (list 9 47 229 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 38 0 331 53 12) (list 54 0 331 53 12) (list 58 0 331 53 12) (list 60 0 331 53 12) (list 65 0 331 53 12) (list 12 0 11 100 15) (list 2 49 233 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 329 53 12) (list -54 0 329 53 12) (list -58 0 329 53 12) (list -60 0 329 53 12) (list -65 0 329 53 12) (list 12 0 10 100 15) (list 2 53 229 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 335 53 12) (list -54 0 335 53 12) (list -58 0 335 53 12) (list -60 0 335 53 12) (list -65 0 335 53 12) (list 12 0 11 100 15) (list 2 53 229 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 129 53 12) (list -54 0 129 53 12) (list -58 0 129 53 12) (list -60 0 129 53 12) (list -65 0 129 53 12) (list 12 0 11 100 15) (list 2 49 233 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 331 53 12) (list 58 0 331 53 12) (list 60 0 331 53 12) (list 65 0 331 53 12) (list 69 0 331 53 12) (list 12 0 11 100 15) (list 7 49 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 325 53 12) (list -58 0 325 53 12) (list -60 0 325 53 12) (list -65 0 325 53 12) (list -69 0 325 53 12) (list 12 0 10 100 15) (list 7 47 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 329 53 12) (list -58 0 329 53 12) (list -60 0 329 53 12) (list -65 0 329 53 12) (list -69 0 329 53 12) (list 12 0 10 100 15) (list 7 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 133 53 12) (list -58 0 133 53 12) (list -60 0 133 53 12) (list -65 0 133 53 12) (list -69 0 133 53 12) (list 12 0 10 100 15) (list 7 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 335 53 12) (list 53 0 335 53 12) (list 57 0 335 53 12) (list 58 0 335 53 12) (list 60 0 335 53 12) (list 12 0 11 100 15) (list 7 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 330 53 12) (list -53 0 330 53 12) (list -57 0 330 53 12) (list -58 0 330 53 12) (list -60 0 330 53 12) (list 12 0 5 100 15) (list 7 48 235 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 330 53 12) (list -53 0 330 53 12) (list -57 0 330 53 12) (list -58 0 330 53 12) (list -60 0 330 53 12) (list 12 0 10 100 15) (list 7 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 134 53 12) (list -53 0 134 53 12) (list -57 0 134 53 12) (list -58 0 134 53 12) (list -60 0 134 53 12) (list 12 0 11 100 15) (list 7 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 45 0 330 53 12) (list 55 0 330 53 12) (list 59 0 330 53 12) (list 60 0 330 53 12) (list 62 0 330 53 12) (list 12 0 10 100 15) (list 9 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 330 53 12) (list -55 0 330 53 12) (list -59 0 330 53 12) (list -60 0 330 53 12) (list -62 0 330 53 12) (list 12 0 11 100 15) (list 9 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 325 53 12) (list -55 0 325 53 12) (list -59 0 325 53 12) (list -60 0 325 53 12) (list -62 0 325 53 12) (list 12 0 10 100 15) (list 9 47 229 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 127 53 12) (list -55 0 127 53 12) (list -59 0 127 53 12) (list -60 0 127 53 12) (list -62 0 127 53 12) (list 12 0 10 100 15) (list 9 47 229 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 38 0 331 53 12) (list 54 0 331 53 12) (list 58 0 331 53 12) (list 60 0 331 53 12) (list 65 0 331 53 12) (list 12 0 11 100 15) (list 2 49 229 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 329 53 12) (list -54 0 329 53 12) (list -58 0 329 53 12) (list -60 0 329 53 12) (list -65 0 329 53 12) (list 12 0 10 100 15) (list 2 47 229 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 330 53 12) (list -54 0 330 53 12) (list -58 0 330 53 12) (list -60 0 330 53 12) (list -65 0 330 53 12) (list 12 0 10 100 15) (list 2 48 229 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 128 53 12) (list -54 0 128 53 12) (list -58 0 128 53 12) (list -60 0 128 53 12) (list -65 0 128 53 12) (list 12 0 11 100 15) (list 2 48 234 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 330 53 12) (list 58 0 330 53 12) (list 60 0 330 53 12) (list 65 0 330 53 12) (list 69 0 330 53 12) (list 12 0 10 100 15) (list 7 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 330 53 12) (list -58 0 330 53 12) (list -60 0 330 53 12) (list -65 0 330 53 12) (list -69 0 330 53 12) (list 12 0 11 100 15) (list 7 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 330 53 12) (list -58 0 330 53 12) (list -60 0 330 53 12) (list -65 0 330 53 12) (list -69 0 330 53 12) (list 12 0 10 100 15) (list 7 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 128 53 12) (list -58 0 128 53 12) (list -60 0 128 53 12) (list -65 0 128 53 12) (list -69 0 128 53 12) (list 12 0 5 100 15) (list 7 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 329 53 12) (list 53 0 329 53 12) (list 57 0 329 53 12) (list 58 0 329 53 12) (list 60 0 329 53 12) (list 12 0 5 100 15) (list 7 47 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 325 53 12) (list -53 0 325 53 12) (list -57 0 325 53 12) (list -58 0 325 53 12) (list -60 0 325 53 12) (list 12 0 6 100 15) (list 7 49 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 331 53 12) (list -53 0 331 53 12) (list -57 0 331 53 12) (list -58 0 331 53 12) (list -60 0 331 53 12) (list 12 0 11 100 15) (list 7 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 127 53 12) (list -53 0 127 53 12) (list -57 0 127 53 12) (list -58 0 127 53 12) (list -60 0 127 53 12) (list 12 0 10 100 15) (list 7 47 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 48 0 325 53 12) (list 58 0 325 53 12) (list 62 0 325 53 12) (list 63 0 325 53 12) (list 65 0 325 53 12) (list 12 0 10 100 15) (list 0 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -48 0 325 53 12) (list -58 0 325 53 12) (list -62 0 325 53 12) (list -63 0 325 53 12) (list -65 0 325 53 12) (list 12 0 10 100 15) (list 0 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -48 0 329 53 12) (list -58 0 329 53 12) (list -62 0 329 53 12) (list -63 0 329 53 12) (list -65 0 329 53 12) (list 12 0 10 100 15) (list 0 47 235 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -48 0 129 53 12) (list -58 0 129 53 12) (list -62 0 129 53 12) (list -63 0 129 53 12) (list -65 0 129 53 12) (list 12 0 11 100 15) (list 0 49 229 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 41 0 324 53 12) (list 57 0 324 53 12) (list 61 0 324 53 12) (list 63 0 324 53 12) (list 68 0 324 53 12) (list 12 0 4 100 15) (list 5 47 229 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -41 0 325 53 12) (list -57 0 325 53 12) (list -61 0 325 53 12) (list -63 0 325 53 12) (list -68 0 325 53 12) (list 12 0 11 100 15) (list 5 48 229 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -41 0 330 53 12) (list -57 0 330 53 12) (list -61 0 330 53 12) (list -63 0 330 53 12) (list -68 0 330 53 12) (list 12 0 11 100 15) (list 5 48 234 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -41 0 133 53 12) (list -57 0 133 53 12) (list -61 0 133 53 12) (list -63 0 133 53 12) (list -68 0 133 53 12) (list 12 0 10 100 15) (list 5 53 229 102 15)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 46 0 335 53 12) (list 57 0 335 53 12) (list 60 0 335 53 12) (list 62 0 335 53 12) (list 67 0 335 53 12) (list 12 0 10 100 15) (list 10 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 330 53 12) (list -57 0 330 53 12) (list -60 0 330 53 12) (list -62 0 330 53 12) (list -67 0 330 53 12) (list 12 0 10 100 15) (list 10 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 335 53 12) (list -57 0 335 53 12) (list -60 0 335 53 12) (list -62 0 335 53 12) (list -67 0 335 53 12) (list 12 0 11 100 15) (list 10 53 229 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 128 53 12) (list -57 0 128 53 12) (list -60 0 128 53 12) (list -62 0 128 53 12) (list -67 0 128 53 12) (list 12 0 11 100 15) (list 10 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 46 0 330 53 12) (list 57 0 330 53 12) (list 60 0 330 53 12) (list 62 0 330 53 12) (list 67 0 330 53 12) (list 12 0 5 100 15) (list 10 48 229 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 330 53 12) (list -57 0 330 53 12) (list -60 0 330 53 12) (list -62 0 330 53 12) (list -67 0 330 53 12) (list 12 0 10 100 15) (list 10 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 335 53 12) (list -57 0 335 53 12) (list -60 0 335 53 12) (list -62 0 335 53 12) (list -67 0 335 53 12) (list 12 0 11 100 15) (list 10 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -46 0 128 53 12) (list -57 0 128 53 12) (list -60 0 128 53 12) (list -62 0 128 53 12) (list -67 0 128 53 12) (list 12 0 5 100 15) (list 10 48 234 100 15)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 45 0 330 53 12) (list 55 0 330 53 12) (list 59 0 330 53 12) (list 60 0 330 53 12) (list 62 0 330 53 12) (list 12 0 10 100 15) (list 9 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 335 53 12) (list -55 0 335 53 12) (list -59 0 335 53 12) (list -60 0 335 53 12) (list -62 0 335 53 12) (list 12 0 11 100 15) (list 9 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 330 53 12) (list -55 0 330 53 12) (list -59 0 330 53 12) (list -60 0 330 53 12) (list -62 0 330 53 12) (list 12 0 5 100 15) (list 9 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -45 0 128 53 12) (list -55 0 128 53 12) (list -59 0 128 53 12) (list -60 0 128 53 12) (list -62 0 128 53 12) (list 12 0 10 100 15) (list 9 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 38 0 330 53 12) (list 54 0 330 53 12) (list 58 0 330 53 12) (list 60 0 330 53 12) (list 65 0 330 53 12) (list 12 0 11 100 15) (list 2 48 234 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 325 53 12) (list -54 0 325 53 12) (list -58 0 325 53 12) (list -60 0 325 53 12) (list -65 0 325 53 12) (list 12 0 10 100 15) (list 2 48 228 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 329 53 12) (list -54 0 329 53 12) (list -58 0 329 53 12) (list -60 0 329 53 12) (list -65 0 329 53 12) (list 12 0 10 100 15) (list 2 47 235 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 133 53 12) (list -54 0 133 53 12) (list -58 0 133 53 12) (list -60 0 133 53 12) (list -65 0 133 53 12) (list 12 0 11 100 15) (list 2 49 233 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 325 53 12) (list 53 0 325 53 12) (list 57 0 325 53 12) (list 58 0 325 53 12) (list 60 0 325 53 12) (list 12 0 6 100 15) (list 7 49 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 229 53 12) (list -53 0 229 53 12) (list -57 0 229 53 12) (list -58 0 229 53 12) (list -60 0 229 53 12) (list 12 0 11 100 15) (list 7 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 42 0 329 53 12) (list 52 0 329 53 12) (list 56 0 329 53 12) (list 58 0 329 53 12) (list 60 0 329 53 12) (list 63 0 329 53 12) (list 12 0 10 100 15) (list 6 47 229 102 15)) :duration 330 :data nil :harmlabel (list (quote f\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -42 0 229 53 12) (list -52 0 229 53 12) (list -56 0 229 53 12) (list -58 0 229 53 12) (list -60 0 229 53 12) (list -63 0 229 53 12) (list 12 0 10 100 15) (list 6 48 229 102 15)) :duration 330 :data nil :harmlabel (list (quote f\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 41 0 330 53 12) (list 56 0 330 53 12) (list 58 0 330 53 12) (list 63 0 330 53 12) (list 67 0 330 53 12) (list 12 0 11 100 15) (list 5 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -41 0 224 53 12) (list -56 0 224 53 12) (list -58 0 224 53 12) (list -63 0 224 53 12) (list -67 0 224 53 12) (list 12 0 5 100 15) (list 5 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 40 0 329 53 12) (list 56 0 329 53 12) (list 60 0 329 53 12) (list 62 0 329 53 12) (list 67 0 329 53 12) (list 12 0 10 100 15) (list 4 47 235 102 15)) :duration 330 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -40 0 229 53 12) (list -56 0 229 53 12) (list -60 0 229 53 12) (list -62 0 229 53 12) (list -67 0 229 53 12) (list 12 0 11 100 15) (list 4 49 229 102 15)) :duration 330 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 39 0 329 53 12) (list 55 0 329 53 12) (list 58 0 329 53 12) (list 62 0 329 53 12) (list 65 0 329 53 12) (list 12 0 10 100 15) (list 3 47 235 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -39 0 335 53 12) (list -55 0 335 53 12) (list -58 0 335 53 12) (list -62 0 335 53 12) (list -65 0 335 53 12) (list 12 0 11 100 15) (list 3 53 235 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -39 0 335 53 12) (list -55 0 335 53 12) (list -58 0 335 53 12) (list -62 0 335 53 12) (list -65 0 335 53 12) (list 12 0 11 100 15) (list 3 49 233 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -39 0 129 53 12) (list -55 0 129 53 12) (list -58 0 129 53 12) (list -62 0 129 53 12) (list -65 0 129 53 12) (list 12 0 11 100 15) (list 3 49 234 100 15)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 38 0 329 53 12) (list 54 0 329 53 12) (list 58 0 329 53 12) (list 60 0 329 53 12) (list 65 0 329 53 12) (list 12 0 10 100 15) (list 2 47 235 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 331 53 12) (list -54 0 331 53 12) (list -58 0 331 53 12) (list -60 0 331 53 12) (list -65 0 331 53 12) (list 12 0 11 100 15) (list 2 49 233 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 329 53 12) (list -54 0 329 53 12) (list -58 0 329 53 12) (list -60 0 329 53 12) (list -65 0 329 53 12) (list 12 0 10 100 15) (list 2 47 229 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -38 0 129 53 12) (list -54 0 129 53 12) (list -58 0 129 53 12) (list -60 0 129 53 12) (list -65 0 129 53 12) (list 12 0 11 100 15) (list 2 49 233 102 15)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 335 53 12) (list 53 0 335 53 12) (list 57 0 335 53 12) (list 58 0 335 53 12) (list 60 0 335 53 12) (list 12 0 10 100 15) (list 7 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 329 53 12) (list -53 0 329 53 12) (list -57 0 329 53 12) (list -58 0 329 53 12) (list -60 0 329 53 12) (list 12 0 4 100 15) (list 7 47 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 325 53 12) (list -53 0 325 53 12) (list -57 0 325 53 12) (list -58 0 325 53 12) (list -60 0 325 53 12) (list 12 0 11 100 15) (list 7 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 133 53 12) (list -53 0 133 53 12) (list -57 0 133 53 12) (list -58 0 133 53 12) (list -60 0 133 53 12) (list 12 0 10 100 15) (list 7 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 325 53 12) (list 53 0 325 53 12) (list 57 0 325 53 12) (list 58 0 325 53 12) (list 60 0 325 53 12) (list 12 0 10 100 15) (list 7 48 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 330 53 12) (list -53 0 330 53 12) (list -57 0 330 53 12) (list -58 0 330 53 12) (list -60 0 330 53 12) (list 12 0 10 100 15) (list 7 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 330 53 12) (list -53 0 330 53 12) (list -57 0 330 53 12) (list -58 0 330 53 12) (list -60 0 330 53 12) (list 12 0 10 100 15) (list 7 48 234 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -43 0 133 53 12) (list -53 0 133 53 12) (list -57 0 133 53 12) (list -58 0 133 53 12) (list -60 0 133 53 12) (list 12 0 10 100 15) (list 7 47 235 101 15)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 48 0 1 53 12) (list 58 0 1 53 12) (list 62 0 1 53 12) (list 63 0 1 53 12) (list 65 0 1 53 12) (list 12 0 11 100 15) (list 0 53 229 101 15)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128) for val in (list (list 111 109 107 25 21 17 13 9 5 1) (list 5 2) (list 5 3) (list 5 4) (list 5) (list 9 6) (list 9 7) (list 9 8) (list 9) (list 97 13 10) (list 97 13 11) (list 97 13 12) (list 97 93 13) (list 117 17 14) (list 117 17 15) (list 117 17 16) (list 117 17) (list 21 18) (list 21 19) (list 21 20) (list 21) (list 25 22) (list 25 23) (list 25 24) (list 25) (list 107 65 33 26) (list 107 65 33 27) (list 65 33 28) (list 65 33 29) (list 65 33 30) (list 65 33 31) (list 65 33 32) (list 65 33) (list 34) (list 35) (list 36) (list 37) (list 38) (list 39) (list 40) (list 41) (list 42) (list 43) (list 44) (list 93 45) (list 46) (list 47) (list 48) (list 49) (list 50) (list 51) (list 52) (list 53) (list 54) (list 55) (list 56) (list 57) (list 58) (list 59) (list 60) (list 61) (list 62) (list 63) (list 64) (list 65) (list 66) (list 67) (list 68) (list 69) (list 70) (list 71) (list 72) (list 73) (list 74) (list 75) (list 76) (list 77) (list 78) (list 79) (list 80) (list 81) (list 82) (list 83) (list 84) (list 85) (list 86) (list 87) (list 88) (list 89) (list 90) (list 91) (list 92) (list 93) (list 97 94) (list 97 95) (list 97 96) (list 97) (list 98) (list 99) (list 100) (list 101) (list 102) (list 103) (list 104) (list 105) (list 106) (list 107) (list 109 108) (list 109) (list 111 110) (list 111) (list 113 112) (list 113) (list 114) (list 115) (list 116) (list 117) (list 118) (list 119) (list 120) (list 121) (list 122) (list 123) (list 124) (list 125) (list 126) (list 127) (list 128) (list 129)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129) for val in (list -1 0 1 2 3 0 5 6 7 0 9 10 11 0 13 14 15 0 17 18 19 0 21 22 23 0 25 26 27 28 29 30 31 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 12 93 94 95 17 18 19 20 21 22 23 24 25 26 0 107 0 109 0 111 13 14 15 16 21 22 23 24 25 26 27 28 29 30 31 32 33) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 93 15 94 16 95 17 18 19 20 21 22 23 24 -1 25 26 27 28 107 29 30 109 31 32 111 33 34 35 36 37 38 39 40 41 42 43 44) for val in (list 111 33 34 35 36 37 38 39 40 41 42 43 93 113 114 94 115 95 116 96 97 98 99 100 117 118 119 120 0 121 122 123 124 108 125 126 110 127 128 112 129 82 83 84 85 86 87 88 89 90 91 92) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 4 5 6 7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 4 5 6 7 1 2 3 4 5 6 7 8 9 10 0 1 0 1 0 1 1 2 3 4 1 2 3 4 5 6 7 8 9 10 11 12 13 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 129 :lrsmode (quote t) :comparateur (quote compareevents) :name (make-array 10 :initial-contents (eval-my-list (quote (#\i #\m #\p #\r #\o #\v #\i #\z #\e #\r)))) :context nil :continuity 127 :navigationmode (quote continuity) :currentstateidx 128 :prevstateidx 127 :max-continuity 1000 :start-region (list 0 129) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 330 :currenttranspo 0 :lengthfactorsfromscen (list 1 100) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :tabou-mode nil :tabou (let ((hashtable (make-hash-table))) (loop for key in (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128) for val in (list (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t)) do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) ))