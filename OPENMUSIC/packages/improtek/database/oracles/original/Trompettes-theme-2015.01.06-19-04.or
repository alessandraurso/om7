(in-package :om)(if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 42 0 47 42 3) (list 69 10 222 108 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 14 108 8) (list 54 0 49 46 3) (list 57 0 54 34 3) (list 61 0 49 47 3) (list 68 6 222 102 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 6 102 8) (list 42 0 49 42 3) (list 66 33 195 91 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 22 91 8) (list 54 0 53 46 3) (list 57 0 53 34 3) (list 61 0 49 47 3) (list 65 26 202 84 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 59 84 8) (list 39 0 53 42 3) (list 66 59 169 77 8)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 58 0 47 47 3) (list 51 0 47 46 3) (list 54 0 47 34 3) (list 49 0 58 45 3)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 37 0 58 60 3)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 54 -5 58 47 3) (list 58 -5 53 37 3) (list 49 0 53 40 3) (list 51 0 48 41 3) (list 69 15 213 105 8)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 48 105 8) (list 36 0 58 59 3) (list 68 42 186 99 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 42 99 8) (list 51 0 58 33 3) (list 60 0 58 42 3) (list 56 0 53 35 3) (list 54 0 53 40 3) (list 66 5 222 91 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 22 91 8) (list 32 0 59 51 3) (list 64 38 196 102 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 10 102 8) (list 54 0 53 35 3) (list 60 0 43 32 3) (list 51 0 63 35 3) (list 56 0 53 35 3) (list 63 16 212 95 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 5 95 8) (list 37 10 59 59 3) (list 64 53 175 84 8)) :duration 230 :data nil :harmlabel (list (quote c\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 218 84 8) (list 61 5 58 35 3) (list 56 5 58 33 3) (list 52 10 53 42 3)) :duration 230 :data nil :harmlabel (list (quote c\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 40 0 53 51 3) (list 61 26 84 66 8)) :duration 230 :data nil :harmlabel (list (quote c\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 52 0 47 32 3) (list 56 0 69 35 3) (list 61 0 53 35 3) (list 61 47 181 62 8)) :duration 230 :data nil :harmlabel (list (quote c\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 10 62 8) (list 42 0 47 42 3) (list 66 32 202 106 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 11 106 8) (list 68 -9 219 102 8) (list 61 0 48 47 3) (list 54 0 48 46 3) (list 57 0 53 34 3) (list 52 0 53 45 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 42 0 48 42 3) (list 69 13 215 95 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 13 95 8) (list 61 0 48 47 3) (list 54 0 53 46 3) (list 57 0 53 34 3) (list 52 0 53 45 3) (list 66 42 183 77 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 47 -10 53 42 3) (list 62 5 162 95 8)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 0 53 47 3) (list 59 0 53 46 3) (list 62 0 58 34 3) (list 57 0 58 45 3)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 45 0 47 42 3)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -5 222 102 8) (list 66 0 53 47 3) (list 59 0 58 46 3) (list 62 0 58 34 3) (list 57 0 58 45 3)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 44 0 64 51 3) (list 64 11 217 106 8)) :duration 230 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 59 0 48 41 3) (list 62 0 43 42 3) (list 64 0 48 32 3) (list 68 0 53 42 3) (list 66 0 228 98 8)) :duration 230 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 40 0 48 42 3) (list 68 26 208 66 8)) :duration 230 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 15 66 8) (list 59 0 37 40 3) (list 64 0 47 34 3) (list 68 0 53 45 3) (list 62 0 47 36 3) (list 64 20 180 62 8)) :duration 230 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 45 0 54 41 3) (list 61 32 196 84 8)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 233 84 8) (list 64 0 54 38 3) (list 69 0 48 43 3) (list 61 0 69 42 3)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 33 84 8) (list 45 0 59 42 3) (list 57 33 195 66 8)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -57 0 16 66 8) (list 61 0 43 42 3) (list 69 0 59 47 3) (list 64 0 53 35 3) (list 61 26 196 103 8)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 38 0 53 42 3) (list 66 0 106 100 8)) :duration 230 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 0 42 40 3) (list 62 0 47 34 3) (list 66 0 57 45 3) (list 60 0 53 36 3) (list 66 20 37 88 8)) :duration 230 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 38 0 47 42 3) (list 66 15 217 103 8)) :duration 230 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 11 103 8) (list 57 0 33 40 3) (list 62 0 38 34 3) (list 66 0 53 45 3) (list 60 0 49 36 3) (list 62 22 174 98 8)) :duration 230 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 59 41 3) (list 59 33 195 84 8)) :duration 230 :data nil :harmlabel (list (quote g) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -59 0 234 84 8) (list 62 0 53 38 3) (list 67 0 49 43 3) (list 59 0 69 42 3)) :duration 230 :data nil :harmlabel (list (quote g) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -59 0 182 84 8) (list 43 0 58 42 3)) :duration 230 :data nil :harmlabel (list (quote g) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 59 0 43 42 3) (list 67 0 58 47 3) (list 62 0 53 35 3) (list 62 58 175 107 8)) :duration 230 :data nil :harmlabel (list (quote g) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 42 107 8) (list 41 0 58 59 3) (list 61 58 101 106 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 56 0 59 33 3) (list 61 0 59 35 3) (list 59 0 49 40 3) (list 65 6 53 42 3) (list 61 27 154 66 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 37 0 59 51 3) (list 64 16 59 104 8) (list 65 75 153 104 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 11 104 8) (list 59 0 59 35 3) (list 65 0 49 32 3) (list 56 0 69 35 3) (list 61 0 59 35 3) (list 61 16 212 80 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 16 80 8) (list 42 0 53 42 3) (list 57 43 191 88 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -57 0 175 88 8) (list 54 0 47 46 3) (list 57 0 53 34 3) (list 61 0 47 47 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 37 0 47 42 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 54 0 53 46 3) (list 57 0 53 34 3) (list 61 0 48 47 3) (list 57 0 121 91 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 35 0 48 42 3) (list 59 42 117 95 8)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 0 53 47 3) (list 59 0 53 46 3) (list 62 0 53 34 3) (list 57 0 58 45 3) (list 57 10 133 102 8)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 38 0 48 42 3) (list 59 21 212 101 8)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 0 48 47 3) (list 59 0 48 46 3) (list 62 0 53 34 3) (list 57 0 53 45 3) (list 61 0 112 104 8) (list 62 122 106 104 8)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 5 104 8) (list 37 0 48 42 3) (list 61 53 175 84 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 228 84 8) (list 54 0 53 46 3) (list 57 0 53 34 3) (list 61 0 47 47 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 10 84 8) (list 33 0 47 42 3) (list 66 26 175 102 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 54 0 53 46 3) (list 57 0 58 34 3) (list 61 0 53 47 3) (list 68 0 233 80 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 15 80 8) (list 32 0 53 56 3) (list 66 21 207 105 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 64 105 8) (list 63 0 53 33 3) (list 60 0 58 38 3) (list 56 0 48 47 3)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 36 0 53 54 3) (list 69 6 110 103 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 56 0 53 32 3) (list 60 0 53 37 3) (list 63 0 43 40 3) (list 66 0 43 42 3) (list 69 10 218 95 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 5 95 8) (list 37 0 48 47 3) (list 68 21 207 100 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 138 100 8) (list 56 0 53 34 3) (list 53 0 58 37 3) (list 61 0 53 45 3)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 37 0 53 47 3)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 56 0 58 34 3) (list 53 0 58 37 3) (list 61 0 53 45 3) (list 71 26 207 98 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -71 0 43 98 8) (list 42 0 43 42 3) (list 69 43 185 101 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 37 101 8) (list 61 0 53 47 3) (list 54 0 53 46 3) (list 57 0 53 34 3) (list 52 0 53 45 3) (list 68 37 191 73 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 60 73 8) (list 42 0 53 42 3) (list 66 59 175 99 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 31 99 8) (list 61 0 47 47 3) (list 54 0 47 46 3) (list 57 0 47 34 3) (list 52 0 53 45 3) (list 65 20 208 103 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 42 103 8) (list 37 0 47 42 3) (list 66 47 149 101 8)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 58 0 54 47 3) (list 51 0 54 46 3) (list 54 0 58 34 3) (list 49 0 58 45 3)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 37 0 53 60 3) (list 61 49 95 73 8)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 54 -5 58 47 3) (list 58 -5 53 37 3) (list 49 0 53 40 3) (list 51 0 48 41 3) (list 69 26 202 98 8)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 10 98 8) (list 36 0 59 59 3) (list 68 0 228 104 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 33 104 8) (list 66 -5 233 100 8) (list 51 0 59 33 3) (list 56 0 59 35 3) (list 54 0 53 40 3) (list 60 6 53 42 3)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 32 0 59 51 3) (list 64 16 212 95 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 6 95 8) (list 54 0 53 35 3) (list 60 0 43 32 3) (list 51 0 63 35 3) (list 56 0 53 35 3) (list 63 10 224 98 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 4 98 8) (list 37 0 53 47 3) (list 64 31 197 84 8)) :duration 230 :data nil :harmlabel (list (quote c\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 228 84 8) (list 52 0 57 37 3) (list 61 0 53 45 3) (list 56 0 53 34 3)) :duration 230 :data nil :harmlabel (list (quote c\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 10 84 8) (list 37 0 47 47 3) (list 61 47 79 95 8)) :duration 230 :data nil :harmlabel (list (quote c\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 52 -5 59 37 3) (list 61 -5 53 45 3) (list 56 -5 59 34 3) (list 61 16 111 80 8)) :duration 230 :data nil :harmlabel (list (quote c\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 42 0 48 42 3) (list 66 26 202 106 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 21 106 8) (list 54 0 58 46 3) (list 57 0 58 34 3) (list 61 0 53 47 3) (list 68 11 217 105 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 21 105 8) (list 42 0 53 42 3) (list 69 21 212 103 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 33 103 8) (list 54 0 48 46 3) (list 57 0 48 34 3) (list 61 0 48 47 3) (list 66 21 207 91 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 33 91 8) (list 47 0 48 42 3) (list 62 33 106 80 8)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 0 53 47 3) (list 59 0 53 46 3) (list 62 0 59 34 3) (list 57 0 59 45 3)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 45 0 57 60 3)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -6 59 47 3) (list 66 -6 59 37 3) (list 57 0 53 40 3) (list 59 0 53 41 3) (list 66 0 222 96 8)) :duration 230 :data nil :harmlabel (list (quote b) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 44 0 63 59 3) (list 64 37 195 80 8)) :duration 230 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 22 80 8) (list 59 0 59 33 3) (list 64 0 53 35 3) (list 62 0 49 40 3) (list 68 0 59 42 3) (list 66 0 228 105 8)) :duration 230 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 6 105 8) (list 40 0 53 51 3) (list 68 0 228 104 8)) :duration 230 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 59 104 8) (list 62 0 53 35 3) (list 68 0 43 32 3) (list 59 0 64 35 3) (list 64 0 53 35 3) (list 64 11 196 102 8)) :duration 230 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 45 0 53 46 3) (list 61 6 228 95 8)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 228 95 8) (list 69 0 58 32 3) (list 61 0 63 42 3) (list 64 0 53 36 3)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 45 0 63 42 3) (list 57 15 217 70 8)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 61 0 38 42 3) (list 69 0 53 47 3) (list 64 0 49 35 3) (list 61 33 195 73 8)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 6 73 8) (list 38 0 49 42 3) (list 66 6 96 80 8)) :duration 230 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 0 43 40 3) (list 62 0 49 34 3) (list 66 0 53 45 3) (list 60 0 53 36 3) (list 66 6 96 91 8)) :duration 230 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 38 0 49 42 3) (list 66 11 223 91 8)) :duration 230 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 5 91 8) (list 57 0 37 40 3) (list 62 0 37 34 3) (list 66 0 53 45 3) (list 60 0 47 36 3) (list 62 0 190 102 8)) :duration 230 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 43 0 63 41 3) (list 58 0 69 66 8) (list 59 96 137 77 8)) :duration 230 :data nil :harmlabel (list (quote g) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -59 0 227 77 8) (list 62 0 48 38 3) (list 67 0 42 43 3) (list 59 0 68 42 3)) :duration 230 :data nil :harmlabel (list (quote g) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -59 0 234 77 8) (list 43 0 64 42 3)) :duration 230 :data nil :harmlabel (list (quote g) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -59 0 53 77 8) (list 59 0 43 42 3) (list 67 0 53 47 3) (list 62 0 53 35 3) (list 62 37 191 101 8)) :duration 230 :data nil :harmlabel (list (quote g) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 20 101 8) (list 49 0 53 51 3) (list 61 43 100 100 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 61 0 63 42 3) (list 56 0 69 40 3) (list 65 0 58 37 3) (list 61 43 116 66 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 64 -10 53 99 8) (list 37 0 47 68 3) (list 65 47 155 98 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 61 -6 64 42 3) (list 59 -6 69 54 3) (list 53 0 47 52 3) (list 56 0 53 46 3) (list 61 10 208 73 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 30 0 63 75 3) (list 57 20 213 98 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -57 0 11 98 8) (list 57 0 48 52 3) (list 66 0 53 59 3) (list 61 0 53 49 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 40 0 48 42 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 61 0 48 47 3) (list 54 0 53 46 3) (list 57 0 53 34 3) (list 52 0 53 45 3) (list 61 10 102 99 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 39 0 48 42 3) (list 66 10 112 98 8)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 58 0 53 47 3) (list 51 0 53 46 3) (list 54 0 53 34 3) (list 49 0 58 45 3)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 37 0 48 42 3) (list 66 0 143 106 8)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 -91 91 95 8) (list 58 0 48 47 3) (list 51 0 48 46 3) (list 54 0 53 34 3) (list 49 0 53 45 3) (list 69 21 202 95 8)) :duration 230 :data nil :harmlabel (list (quote eb) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 36 0 64 51 3) (list 68 11 217 95 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 228 95 8) (list 56 -5 53 32 3) (list 60 -5 58 42 3) (list 51 0 48 41 3) (list 54 0 42 42 3)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 121 95 8) (list 44 0 48 51 3)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 0 53 46 3) (list 66 0 63 37 3) (list 60 0 59 32 3) (list 56 0 48 42 3) (list 68 10 112 95 8)) :duration 230 :data nil :harmlabel (list (quote g\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 49 0 53 51 3) (list 68 16 217 98 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 48 98 8) (list 61 0 58 42 3) (list 56 0 64 40 3) (list 65 0 54 37 3) (list 65 32 196 95 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 37 0 48 47 3) (list 66 26 196 95 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 -5 238 103 8) (list 56 0 58 34 3) (list 53 0 58 37 3) (list 61 0 53 45 3)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 26 103 8) (list 42 0 48 42 3) (list 66 37 191 95 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 234 95 8) (list 54 0 53 46 3) (list 57 0 59 34 3) (list 61 0 53 47 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 31 95 8) (list 42 0 47 42 3) (list 69 31 197 103 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 232 103 8) (list 54 0 53 46 3) (list 57 0 53 34 3) (list 61 0 47 47 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 38 103 8) (list 45 0 49 80 3) (list 64 26 202 106 8)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 228 106 8) (list 64 0 53 47 3) (list 69 0 53 46 3) (list 61 0 53 57 3)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 234 106 8) (list 40 0 64 61 3)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 228 106 8) (list 64 -6 64 42 3) (list 66 -6 69 59 3) (list 69 0 43 60 3) (list 61 0 47 42 3)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -64 0 63 106 8) (list 49 0 53 68 3) (list 60 15 38 66 8) (list 61 42 186 93 8)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 232 93 8) (list 61 0 63 42 3) (list 69 0 63 48 3) (list 64 0 47 54 3)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 11 93 8) (list 45 -4 58 42 3)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 61 0 49 42 3) (list 69 0 59 47 3) (list 64 0 59 35 3) (list 61 0 181 102 8)) :duration 230 :data nil :harmlabel (list (quote a) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 44 0 47 65 3) (list 64 0 90 103 8) (list 65 90 138 103 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 37 103 8) (list 61 0 53 59 3) (list 65 0 58 46 3) (list 68 0 63 43 3) (list 59 0 53 46 3) (list 61 58 170 70 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 5 70 8) (list 42 0 58 72 3) (list 68 5 228 97 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 101 97 8) (list 65 0 58 66 3) (list 68 0 48 61 3) (list 61 0 64 66 3) (list 59 0 48 59 3) (list 65 68 160 62 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 26 62 8) (list 41 0 64 73 3) (list 61 42 191 99 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 185 99 8) (list 65 0 59 49 3) (list 61 0 53 54 3) (list 68 0 53 42 3) (list 59 0 53 61 3)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 37 0 63 68 3)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -5 43 56 3) (list 68 0 53 53 3) (list 59 0 53 42 3) (list 61 0 53 65 3) (list 61 5 48 88 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 42 0 48 42 3) (list 61 38 190 101 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 233 101 8) (list 66 0 53 46 3) (list 57 0 58 34 3) (list 61 0 53 47 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -61 0 26 101 8) (list 42 0 48 42 3) (list 66 6 222 106 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 10 106 8) (list 66 0 53 46 3) (list 57 0 53 34 3) (list 61 0 43 47 3) (list 69 10 218 107 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 26 107 8) (list 49 -5 58 51 3) (list 68 26 202 107 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 234 107 8) (list 61 0 59 42 3) (list 56 0 69 40 3) (list 65 0 59 37 3)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 57 107 8) (list 37 -6 48 68 3) (list 65 37 190 102 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 5 102 8) (list 53 0 48 52 3) (list 56 0 54 46 3) (list 61 0 54 42 3) (list 59 0 64 54 3) (list 68 5 223 91 8)) :duration 230 :data nil :harmlabel (list (quote c\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -68 0 54 91 8) (list 30 0 64 75 3) (list 66 43 190 105 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 202 105 8) (list 57 0 53 52 3) (list 66 0 59 59 3) (list 61 0 59 49 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 37 0 53 42 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 54 0 53 46 3) (list 57 0 53 34 3) (list 61 0 47 47 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 42 0 47 42 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 54 0 53 46 3) (list 57 0 59 34 3) (list 61 0 53 47 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 37 0 43 42 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 54 0 58 46 3) (list 57 0 58 34 3) (list 61 0 53 47 3) (list 66 32 53 101 8)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 42 0 47 42 3)) :duration 230 :data nil :harmlabel (list (quote f\#) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil  )) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160) for val in (list (list 41 37 33 29 25 21 13 9 5 1) (list 149 129 57 21 5 2) (list 149 129 57 21 5 3) (list 149 129 57 21 5 4) (list 157 149 129 57 21 5) (list 9 6) (list 9 7) (list 9 8) (list 9) (list 61 13 10) (list 61 13 11) (list 61 13 12) (list 61 13) (list 17 14) (list 17 15) (list 17 16) (list 17) (list 18) (list 19) (list 20) (list 21) (list 53 25 22) (list 53 25 23) (list 53 25 24) (list 53 25) (list 29 26) (list 29 27) (list 29 28) (list 29) (list 137 33 30) (list 137 33 31) (list 137 33 32) (list 137 133 33) (list 37 34) (list 37 35) (list 37 36) (list 37) (list 41 38) (list 41 39) (list 41 40) (list 41) (list 45 42) (list 45 43) (list 45 44) (list 141 45) (list 46) (list 47) (list 48) (list 157 149 129 69 49) (list 50) (list 51) (list 52) (list 53) (list 54) (list 55) (list 56) (list 57) (list 58) (list 59) (list 60) (list 61) (list 62) (list 63) (list 64) (list 65) (list 66) (list 67) (list 68) (list 129 69) (list 70) (list 71) (list 72) (list 73) (list 74) (list 75) (list 76) (list 121 77) (list 78) (list 79) (list 80) (list 81) (list 82) (list 83) (list 84) (list 85) (list 86) (list 87) (list 88) (list 89) (list 90) (list 91) (list 92) (list 93) (list 94) (list 95) (list 96) (list 97) (list 98) (list 99) (list 100) (list 101) (list 102) (list 103) (list 104) (list 105) (list 106) (list 107) (list 108) (list 109) (list 110) (list 111) (list 112) (list 113) (list 114) (list 115) (list 116) (list 117) (list 118) (list 119) (list 120) (list 121) (list 122) (list 123) (list 124) (list 125) (list 126) (list 127) (list 128) (list 129) (list 130) (list 131) (list 132) (list 133) (list 137 134) (list 137 135) (list 137 136) (list 137) (list 138) (list 139) (list 140) (list 141) (list 145 142) (list 145 143) (list 145 144) (list 145) (list 146) (list 147) (list 148) (list 149) (list 150) (list 151) (list 152) (list 153) (list 154) (list 155) (list 156) (list 157) (list 158) (list 159) (list 160) (list 161)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161) for val in (list -1 0 1 2 3 0 5 6 7 0 9 10 11 0 13 14 15 1 2 3 4 0 21 22 23 0 25 26 27 0 29 30 31 0 33 34 35 0 37 38 39 0 41 42 43 1 2 3 4 21 22 23 24 1 2 3 4 9 10 11 12 41 42 43 44 45 46 47 48 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 69 70 71 72 73 74 75 76 61 62 63 64 65 66 67 68 29 30 31 32 32 133 134 135 41 42 43 44 44 141 142 143 45 46 47 48 41 42 43 44 45 46 47 48 4 157 158 159 160) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list 0 158 1 159 2 160 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 -1 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 133 134 135 61 62 141 63 142 64 143 65 66 67 68 69 70 71 72 73 74 75 76 157) for val in (list 41 159 53 160 54 161 55 157 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 0 89 90 91 92 129 130 131 133 97 98 99 100 101 102 103 104 149 150 151 152 153 154 155 156 134 135 136 121 122 142 123 143 124 144 125 126 127 128 113 114 115 116 117 118 119 120 158) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 1 2 3 4 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 1 2 3 4 5 6 7 8 1 2 3 4 1 2 3 4 1 2 3 4 5 6 7 8 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 9 10 11 12 13 14 15 16 5 6 7 8 9 10 11 12 1 2 3 4 4 5 6 7 1 2 3 4 4 5 6 7 5 6 7 8 1 2 3 4 5 6 7 8 4 5 6 7 8 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 161 :lrsmode (quote t) :comparateur (quote compareevents) :name (make-array 10 :initial-contents (eval-my-list (quote (#\i #\m #\p #\r #\o #\v #\i #\z #\e #\r)))) :context nil :continuity 159 :navigationmode (quote continuity) :currentstateidx 160 :prevstateidx 159 :max-continuity 1000 :start-region (list 0 161) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 230 :currenttranspo 0 :lengthfactorsfromgrid (list 1 100) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :tabou-mode nil :tabou (let ((hashtable (make-hash-table))) (loop for key in (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160) for val in (list (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t)) do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable)  ))
