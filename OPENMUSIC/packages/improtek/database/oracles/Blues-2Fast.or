(in-package :om)(if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 16 89 82 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -16 347 63 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -74 0 105 63 3) (list 74 226 105 51 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 73 -26 94 62 3) (list 72 52 84 57 3) (list 70 226 79 45 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 52 89 51 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 0 126 43 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 32 174 52 3)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 47 210 34 3)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 0 37 63 3) (list 66 58 79 68 3) (list 65 132 74 61 3) (list 66 205 89 64 3) (list 65 284 52 51 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 42 51 3) (list 66 21 74 61 3) (list 65 131 74 72 3) (list 66 189 79 33 3) (list 65 252 74 66 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -65 0 16 66 3) (list 66 0 84 66 3) (list 65 84 79 60 3) (list 66 147 79 63 3) (list 65 226 100 74 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -16 79 51 3) (list 65 69 79 54 3) (list 66 126 79 61 3) (list 65 237 52 62 3) (list 66 268 63 58 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -66 0 21 58 3) (list 65 32 79 57 3) (list 66 84 79 60 3) (list 65 169 84 53 3) (list 66 232 79 46 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -6 84 48 3) (list 66 52 74 39 3) (list 65 126 79 25 3) (list 66 189 73 26 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -36 42 21 3) (list 66 16 105 38 3) (list 65 126 37 18 3) (list 66 169 68 41 3) (list 65 252 58 33 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -16 74 35 3) (list 65 89 58 37 3) (list 66 147 69 32 3) (list 65 231 74 38 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -32 74 31 3) (list 65 68 58 23 3) (list 66 131 69 29 3) (list 65 221 63 23 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -42 79 33 3) (list 65 42 74 35 3) (list 66 121 89 31 3) (list 65 210 68 29 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -47 95 34 3) (list 65 47 63 34 3) (list 66 111 74 29 3) (list 65 189 100 38 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -42 52 29 3) (list 65 16 69 31 3) (list 66 74 84 44 3) (list 65 174 89 32 3) (list 66 247 89 28 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 0 63 34 3) (list 66 63 74 33 3) (list 65 152 84 28 3) (list 66 237 73 31 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 0 37 28 3) (list 66 42 84 44 3) (list 65 163 47 38 3) (list 66 210 74 36 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -42 84 44 3) (list 66 26 84 59 3) (list 65 131 58 29 3) (list 66 189 89 41 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -32 95 58 3) (list 68 63 68 59 3) (list 69 163 68 53 3) (list 70 231 74 57 3)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -16 89 41 3) (list 70 116 95 27 3) (list 71 205 47 56 3)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 0 42 11 3) (list 71 21 52 29 3) (list 70 69 79 34 3) (list 69 116 79 62 3) (list 70 200 95 32 3)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 -32 79 63 3) (list 72 73 74 40 3) (list 73 136 53 63 3) (list 74 210 95 68 3)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -21 111 39 3) (list 76 47 42 62 3) (list 77 116 73 31 3) (list 76 163 42 46 3) (list 75 189 63 41 3) (list 74 232 94 59 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -6 100 39 3) (list 76 100 84 39 3) (list 77 199 79 54 3) (list 78 279 26 57 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 16 84 62 3) (list 80 105 74 32 3) (list 81 189 74 62 3) (list 82 273 58 45 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -82 0 26 45 3) (list 83 37 37 34 3) (list 84 74 89 62 3) (list 83 137 42 33 3) (list 82 168 69 51 3) (list 81 221 105 62 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 82 0 105 33 3) (list 83 100 79 62 3) (list 84 205 63 58 3) (list 85 268 42 54 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 86 11 74 65 3) (list 87 126 63 25 3) (list 88 179 63 70 3) (list 89 237 95 65 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 88 -21 31 47 3) (list 87 10 63 54 3) (list 86 63 79 68 3) (list 87 147 100 35 3) (list 88 252 73 61 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 89 11 84 46 3) (list 90 94 21 49 3) (list 91 137 84 56 3) (list 92 252 74 54 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 93 36 58 76 3) (list 94 100 79 57 3) (list 95 189 73 76 3) (list 96 268 63 64 3)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -96 0 26 64 3) (list 95 -6 100 76 3) (list 94 42 79 58 3) (list 93 121 42 62 3) (list 92 237 42 20 3)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 91 -31 73 60 3) (list 90 52 69 62 3) (list 89 158 63 63 3) (list 88 195 84 54 3)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 89 -42 63 32 3) (list 90 -5 58 59 3) (list 91 47 105 68 3) (list 90 121 116 59 3) (list 89 237 126 50 3) (list 88 237 42 59 3)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 300 50 3) (list 87 -37 95 44 3) (list 84 74 37 39 3) (list 86 95 94 31 3) (list 87 179 84 72 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list 91 -26 63 46 3) (list 87 21 116 54 3) (list 86 89 79 25 3) (list 84 163 58 49 3) (list 82 268 58 34 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -82 0 31 34 3) (list 81 26 68 60 3) (list 79 84 79 46 3) (list 82 152 105 54 3) (list 81 189 37 25 3) (list 86 263 68 56 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -86 0 5 56 3) (list 84 -37 111 31 3) (list 82 11 100 18 3) (list 81 74 105 66 3) (list 79 142 42 39 3) (list 79 273 58 21 3) (list 77 279 52 17 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -79 0 58 21 3) (list -77 0 79 17 3) (list 75 63 84 34 3) (list 74 132 52 48 3) (list 75 205 84 42 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 337 50 3) (list 77 -26 89 18 3) (list 75 21 100 49 3) (list 74 89 58 37 3) (list 72 126 47 50 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 321 50 3) (list 70 -47 26 22 3) (list 72 -11 105 19 3) (list 69 95 47 29 3) (list 67 137 68 51 3) (list 69 200 58 30 3) (list 70 242 79 37 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -70 0 10 37 3) (list 74 10 95 41 3) (list 72 79 121 16 3) (list 70 162 100 33 3) (list 69 221 63 41 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 336 50 3) (list 67 -47 42 43 3) (list 67 74 52 20 3) (list 69 110 116 21 3) (list 65 221 42 16 3) (list 62 263 73 34 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list 65 0 69 39 3) (list 67 74 163 53 3) (list 69 142 47 29 3) (list 65 216 79 52 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list 62 -31 63 30 3) (list 60 84 47 30 3) (list 62 163 42 20 3) (list 65 215 53 24 3) (list 62 252 52 24 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 347 50 3) (list 60 -21 63 28 3) (list 57 42 95 27 3) (list 60 111 74 18 3) (list 62 200 37 35 3) (list 65 263 58 36 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 315 50 3) (list 62 -21 74 19 3) (list 60 21 42 33 3) (list 57 89 58 33 3) (list 60 157 74 24 3) (list 62 262 37 29 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list 67 0 79 25 3) (list 62 68 84 19 3) (list 60 152 37 35 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 337 50 3) (list 60 -32 195 29 3) (list 62 179 89 51 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 320 50 3) (list 67 -42 89 37 3) (list 62 68 74 27 3) (list 60 142 179 50 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -60 0 331 50 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -60 0 168 50 3) (list 62 200 42 36 3) (list 63 226 100 86 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 332 50 3) (list 62 -5 79 35 3) (list 60 27 231 57 3) (list 62 210 121 74 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list -62 0 21 74 3) (list 63 21 105 69 3) (list 65 205 111 48 3) (list 67 226 42 53 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list 66 26 226 74 3) (list 54 68 142 56 3) (list 44 79 126 42 3) (list 68 215 116 72 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -68 0 63 72 3) (list 70 16 137 55 3) (list 72 205 126 76 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -72 0 74 76 3) (list 74 58 210 86 3) (list 75 247 84 92 3) (list 58 252 79 42 3) (list 65 263 68 30 3) (list 54 263 68 28 3) (list 60 263 68 39 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list -75 0 63 92 3) (list -58 0 37 42 3) (list -65 0 16 30 3) (list -54 0 58 28 3) (list -60 0 37 39 3) (list 77 95 126 66 3) (list 82 252 74 57 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -82 0 42 57 3) (list 86 95 189 88 3) (list 84 263 68 82 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 358 50 3) (list -84 0 74 82 3) (list 82 79 126 62 3) (list 58 252 105 23 3) (list 62 252 105 42 3) (list 81 252 105 72 3) (list 57 252 58 31 3) (list 53 252 58 33 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 305 50 3) (list -81 0 26 72 3) (list 79 26 111 63 3) (list 77 199 105 65 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 337 50 3) (list -77 0 63 65 3) (list 74 63 137 68 3) (list 72 205 121 51 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list 70 42 194 55 3) (list 69 236 95 62 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 320 50 3) (list -69 0 21 62 3) (list 67 26 111 67 3) (list 65 205 116 54 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 337 50 3) (list -65 0 47 54 3) (list 62 47 126 60 3) (list 60 215 121 28 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list -60 0 11 28 3) (list 62 26 174 53 3) (list 65 205 100 78 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list 67 47 137 69 3)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list 69 11 111 82 3) (list 70 195 100 56 3)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list 72 16 221 63 3) (list 74 189 121 84 3)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list 68 6 320 54 3) (list 63 16 310 46 3) (list 57 16 310 53 3) (list 75 26 147 78 3) (list 77 200 126 69 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -68 0 331 54 3) (list -63 0 331 46 3) (list -57 0 331 53 3) (list -77 0 69 69 3) (list 78 42 121 80 3) (list 80 231 100 68 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 332 50 3) (list -68 0 332 54 3) (list -63 0 332 46 3) (list -57 0 332 53 3) (list -80 0 26 68 3) (list 82 47 131 72 3) (list 80 242 89 69 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -68 0 21 54 3) (list -63 0 42 46 3) (list -57 0 42 53 3) (list 78 47 169 67 3) (list 77 236 95 84 3)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list -77 0 31 84 3) (list 75 52 174 56 3) (list 62 63 263 34 3) (list 58 74 252 25 3) (list 57 74 252 38 3) (list 65 74 252 28 3) (list 74 231 95 61 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 336 50 3) (list -62 0 336 34 3) (list -58 0 336 25 3) (list -57 0 336 38 3) (list -65 0 336 28 3) (list -74 0 63 61 3) (list 72 58 126 56 3) (list 70 231 105 51 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 337 50 3) (list -62 0 337 34 3) (list -58 0 337 25 3) (list -57 0 337 38 3) (list -65 0 337 28 3) (list -70 0 37 51 3) (list 69 47 189 59 3) (list 74 237 100 48 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 320 50 3) (list -62 0 320 34 3) (list -58 0 320 25 3) (list -57 0 320 38 3) (list -65 0 320 28 3) (list -74 0 37 48 3) (list 72 47 168 58 3) (list 70 210 110 51 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 332 50 3) (list -62 0 332 34 3) (list -58 0 332 25 3) (list -57 0 332 38 3) (list -65 0 205 28 3) (list -70 0 27 51 3) (list 69 53 142 62 3) (list 70 205 126 34 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -62 0 331 34 3) (list -58 0 331 25 3) (list -57 0 331 38 3) (list -70 0 37 34 3) (list 69 37 142 56 3) (list 70 210 121 26 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list -62 0 326 34 3) (list -58 0 326 25 3) (list -57 0 326 38 3) (list -70 0 47 26 3) (list 67 79 247 52 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 336 50 3) (list -62 0 263 34 3) (list -58 0 294 25 3) (list -57 0 294 38 3) (list -67 0 26 52 3) (list 65 74 221 30 3)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list 67 47 237 44 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list 69 52 132 28 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list 72 95 179 31 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 332 50 3) (list 74 -42 84 82 3) (list 75 158 137 74 3)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 336 50 3) (list 74 37 179 30 3) (list 72 47 126 39 3) (list 60 52 284 37 3) (list 65 63 273 20 3) (list 54 68 268 24 3) (list 72 268 68 63 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list -60 0 326 37 3) (list -65 0 326 20 3) (list -54 0 326 24 3) (list -72 0 74 63 3) (list 73 152 116 57 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -60 0 331 37 3) (list -54 0 331 24 3) (list 74 16 242 72 3) (list 72 210 121 80 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 337 50 3) (list -60 0 95 37 3) (list -54 0 100 24 3) (list -72 0 137 80 3) (list 64 69 215 24 3) (list 70 89 169 63 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list 71 -16 257 76 3) (list 53 0 331 49 3) (list 59 0 331 62 3) (list 79 247 84 67 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 321 50 3) (list -53 0 321 49 3) (list -59 0 321 62 3) (list -79 0 42 67 3) (list 71 142 94 84 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -53 0 31 49 3) (list -59 0 21 62 3) (list 58 0 331 46 3) (list 52 26 305 58 3)) :duration 330 :data nil :harmlabel (list (quote f\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -58 0 331 46 3) (list -52 0 331 58 3)) :duration 330 :data nil :harmlabel (list (quote f\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 342 50 3) (list -58 0 84 46 3) (list -52 0 63 58 3) (list 57 63 279 63 3) (list 51 63 279 27 3)) :duration 330 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list -57 0 326 63 3) (list -51 0 326 27 3)) :duration 330 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 320 50 3) (list -57 0 79 63 3) (list -51 0 100 27 3) (list 56 74 247 40 3) (list 50 79 242 36 3)) :duration 330 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 332 50 3) (list -56 0 332 40 3) (list -50 0 332 36 3)) :duration 330 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -56 0 68 40 3) (list -50 0 79 36 3) (list 55 68 111 57 3)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list 87 231 84 70 3)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 337 50 3) (list 86 100 168 78 3)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 325 50 3) (list 84 -6 111 51 3) (list 82 231 89 28 3)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 332 50 3) (list 81 69 263 53 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -81 0 331 53 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -81 0 16 53 3) (list 79 37 79 47 3) (list 81 200 116 56 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list 74 37 137 32 3) (list 77 231 63 45 3)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 347 50 3) (list 79 74 126 44 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 310 50 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 337 50 3) (list 72 79 257 48 3) (list 79 79 142 51 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 331 50 3) (list -72 0 100 48 3) (list 74 263 68 46 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list -74 0 26 46 3) (list 72 11 74 63 3) (list 67 63 126 56 3) (list 65 263 58 42 3) (list 64 268 42 35 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 326 50 3) (list 67 47 121 54 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -89 0 14018 50 3)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil )) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122) for val in (list (list 107 105 103 29 21 17 13 9 5 1) (list 5 2) (list 5 3) (list 5 4) (list 5) (list 93 9 6) (list 93 9 7) (list 93 9 8) (list 93 89 9) (list 113 13 10) (list 113 13 11) (list 113 13 12) (list 113 13) (list 17 14) (list 17 15) (list 17 16) (list 17) (list 21 18) (list 21 19) (list 21 20) (list 21) (list 103 61 29 22) (list 103 61 29 23) (list 61 29 24) (list 61 29 25) (list 61 29 26) (list 61 29 27) (list 61 29 28) (list 61 29) (list 33 30) (list 33 31) (list 33 32) (list 33) (list 34) (list 35) (list 36) (list 37) (list 38) (list 39) (list 40) (list 89 41) (list 42) (list 43) (list 44) (list 45) (list 46) (list 47) (list 48) (list 49) (list 50) (list 51) (list 52) (list 53) (list 54) (list 55) (list 56) (list 57) (list 58) (list 59) (list 60) (list 61) (list 62) (list 63) (list 64) (list 65) (list 66) (list 67) (list 68) (list 69) (list 70) (list 71) (list 72) (list 73) (list 74) (list 75) (list 76) (list 77) (list 78) (list 79) (list 80) (list 81) (list 82) (list 83) (list 84) (list 85) (list 86) (list 87) (list 88) (list 89) (list 93 90) (list 93 91) (list 93 92) (list 93) (list 94) (list 95) (list 96) (list 97) (list 98) (list 99) (list 100) (list 101) (list 102) (list 103) (list 105 104) (list 105) (list 107 106) (list 107) (list 109 108) (list 109) (list 110) (list 111) (list 112) (list 113) (list 114) (list 115) (list 116) (list 117) (list 118) (list 119) (list 120) (list 121) (list 122) (list 123)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123) for val in (list -1 0 1 2 3 0 5 6 7 0 9 10 11 0 13 14 15 0 17 18 19 0 21 22 23 24 25 26 27 0 29 30 31 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 8 89 90 91 13 14 15 16 17 18 19 20 21 22 0 103 0 105 0 107 9 10 11 12 17 18 19 20 21 22 23 24 25 26 27) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 89 11 90 12 91 13 14 15 16 17 18 19 20 21 22 23 24 103 -1 25 26 105 27 28 107 29 30 31 32 33 34 35 36 37 38 39 40) for val in (list 107 33 34 35 36 37 38 39 89 109 110 90 111 91 112 92 93 94 95 96 113 114 115 116 117 118 119 120 104 0 121 122 106 123 76 108 77 78 79 80 81 82 83 84 85 86 87 88) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 4 5 6 7 0 1 2 3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 4 5 6 7 1 2 3 4 5 6 7 8 9 10 0 1 0 1 0 1 1 2 3 4 1 2 3 4 5 6 7 8 9 10 11 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 123 :lrsmode (quote t) :comparateur (quote compareevents) :name (make-array 10 :initial-contents (eval-my-list (quote (#\i #\m #\p #\r #\o #\v #\i #\z #\e #\r)))) :context nil :continuity 0 :navigationmode (quote suppleance) :currentstateidx 28 :prevstateidx 123 :max-continuity 1000 :start-region (list 0 123) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 330 :currenttranspo 0 :lengthfactorsfromscen (list 1 100) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :tabou-mode nil :tabou (let ((hashtable (make-hash-table))) (loop for key in (list 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123) for val in (list (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t)) do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) ))